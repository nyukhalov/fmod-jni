/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.fmod.jni;

public class FMOD implements FMODConstants {
  public static FMOD_RESULT FMOD_Memory_Initialize(SWIGTYPE_p_void poolmem, int poollen, SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__p_void useralloc, SWIGTYPE_p_f_p_void_unsigned_int_unsigned_int_p_q_const__char__p_void userrealloc, SWIGTYPE_p_f_p_void_unsigned_int_p_q_const__char__void userfree, long memtypeflags) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Memory_Initialize(SWIGTYPE_p_void.getCPtr(poolmem), poollen, SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__p_void.getCPtr(useralloc), SWIGTYPE_p_f_p_void_unsigned_int_unsigned_int_p_q_const__char__p_void.getCPtr(userrealloc), SWIGTYPE_p_f_p_void_unsigned_int_p_q_const__char__void.getCPtr(userfree), memtypeflags));
  }

  public static FMOD_RESULT FMOD_Memory_GetStats(int[] currentalloced, int[] maxalloced, int blocking) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Memory_GetStats(currentalloced, maxalloced, blocking));
  }

  public static FMOD_RESULT FMOD_Debug_Initialize(long flags, FMOD_DEBUG_MODE mode, SWIGTYPE_p_f_unsigned_int_p_q_const__char_int_p_q_const__char_p_q_const__char__FMOD_RESULT callback, String filename) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Debug_Initialize(flags, mode.swigValue(), SWIGTYPE_p_f_unsigned_int_p_q_const__char_int_p_q_const__char_p_q_const__char__FMOD_RESULT.getCPtr(callback), filename));
  }

  public static FMOD_RESULT FMOD_File_SetDiskBusy(int busy) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_File_SetDiskBusy(busy));
  }

  public static FMOD_RESULT FMOD_File_GetDiskBusy(int[] busy) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_File_GetDiskBusy(busy));
  }

  public static FMOD_RESULT FMOD_Thread_SetAttributes(FMOD_THREAD_TYPE type, long affinity, int priority, long stacksize) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Thread_SetAttributes(type.swigValue(), affinity, priority, stacksize));
  }

  public static FMOD_RESULT FMOD_System_Create(SWIGTYPE_p_p_FMOD_SYSTEM system, long headerversion) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Create(SWIGTYPE_p_p_FMOD_SYSTEM.getCPtr(system), headerversion));
  }

  public static FMOD_RESULT FMOD_System_Release(SWIGTYPE_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Release(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_System_SetOutput(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_OUTPUTTYPE output) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetOutput(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), output.swigValue()));
  }

  public static FMOD_RESULT FMOD_System_GetOutput(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_FMOD_OUTPUTTYPE output) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetOutput(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_OUTPUTTYPE.getCPtr(output)));
  }

  public static FMOD_RESULT FMOD_System_GetNumDrivers(SWIGTYPE_p_FMOD_SYSTEM system, int[] numdrivers) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetNumDrivers(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), numdrivers));
  }

  public static FMOD_RESULT FMOD_System_GetDriverInfo(SWIGTYPE_p_FMOD_SYSTEM system, int id, String name, int namelen, FMOD_GUID guid, int[] systemrate, SWIGTYPE_p_FMOD_SPEAKERMODE speakermode, int[] speakermodechannels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetDriverInfo(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), id, name, namelen, FMOD_GUID.getCPtr(guid), guid, systemrate, SWIGTYPE_p_FMOD_SPEAKERMODE.getCPtr(speakermode), speakermodechannels));
  }

  public static FMOD_RESULT FMOD_System_SetDriver(SWIGTYPE_p_FMOD_SYSTEM system, int driver) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetDriver(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), driver));
  }

  public static FMOD_RESULT FMOD_System_GetDriver(SWIGTYPE_p_FMOD_SYSTEM system, int[] driver) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetDriver(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), driver));
  }

  public static FMOD_RESULT FMOD_System_SetSoftwareChannels(SWIGTYPE_p_FMOD_SYSTEM system, int numsoftwarechannels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetSoftwareChannels(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), numsoftwarechannels));
  }

  public static FMOD_RESULT FMOD_System_GetSoftwareChannels(SWIGTYPE_p_FMOD_SYSTEM system, int[] numsoftwarechannels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetSoftwareChannels(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), numsoftwarechannels));
  }

  public static FMOD_RESULT FMOD_System_SetSoftwareFormat(SWIGTYPE_p_FMOD_SYSTEM system, int samplerate, FMOD_SPEAKERMODE speakermode, int numrawspeakers) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetSoftwareFormat(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), samplerate, speakermode.swigValue(), numrawspeakers));
  }

  public static FMOD_RESULT FMOD_System_GetSoftwareFormat(SWIGTYPE_p_FMOD_SYSTEM system, int[] samplerate, SWIGTYPE_p_FMOD_SPEAKERMODE speakermode, int[] numrawspeakers) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetSoftwareFormat(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), samplerate, SWIGTYPE_p_FMOD_SPEAKERMODE.getCPtr(speakermode), numrawspeakers));
  }

  public static FMOD_RESULT FMOD_System_SetDSPBufferSize(SWIGTYPE_p_FMOD_SYSTEM system, long bufferlength, int numbuffers) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetDSPBufferSize(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), bufferlength, numbuffers));
  }

  public static FMOD_RESULT FMOD_System_GetDSPBufferSize(SWIGTYPE_p_FMOD_SYSTEM system, long[] bufferlength, int[] numbuffers) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetDSPBufferSize(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), bufferlength, numbuffers));
  }

  public static FMOD_RESULT FMOD_System_SetFileSystem(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_f_p_q_const__char_p_unsigned_int_p_p_void_p_void__FMOD_RESULT useropen, SWIGTYPE_p_f_p_void_p_void__FMOD_RESULT userclose, SWIGTYPE_p_f_p_void_p_void_unsigned_int_p_unsigned_int_p_void__FMOD_RESULT userread, SWIGTYPE_p_f_p_void_unsigned_int_p_void__FMOD_RESULT userseek, SWIGTYPE_p_f_p_struct_FMOD_ASYNCREADINFO_p_void__FMOD_RESULT userasyncread, SWIGTYPE_p_f_p_struct_FMOD_ASYNCREADINFO_p_void__FMOD_RESULT userasynccancel, int blockalign) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetFileSystem(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_f_p_q_const__char_p_unsigned_int_p_p_void_p_void__FMOD_RESULT.getCPtr(useropen), SWIGTYPE_p_f_p_void_p_void__FMOD_RESULT.getCPtr(userclose), SWIGTYPE_p_f_p_void_p_void_unsigned_int_p_unsigned_int_p_void__FMOD_RESULT.getCPtr(userread), SWIGTYPE_p_f_p_void_unsigned_int_p_void__FMOD_RESULT.getCPtr(userseek), SWIGTYPE_p_f_p_struct_FMOD_ASYNCREADINFO_p_void__FMOD_RESULT.getCPtr(userasyncread), SWIGTYPE_p_f_p_struct_FMOD_ASYNCREADINFO_p_void__FMOD_RESULT.getCPtr(userasynccancel), blockalign));
  }

  public static FMOD_RESULT FMOD_System_AttachFileSystem(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_f_p_q_const__char_p_unsigned_int_p_p_void_p_void__FMOD_RESULT useropen, SWIGTYPE_p_f_p_void_p_void__FMOD_RESULT userclose, SWIGTYPE_p_f_p_void_p_void_unsigned_int_p_unsigned_int_p_void__FMOD_RESULT userread, SWIGTYPE_p_f_p_void_unsigned_int_p_void__FMOD_RESULT userseek) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_AttachFileSystem(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_f_p_q_const__char_p_unsigned_int_p_p_void_p_void__FMOD_RESULT.getCPtr(useropen), SWIGTYPE_p_f_p_void_p_void__FMOD_RESULT.getCPtr(userclose), SWIGTYPE_p_f_p_void_p_void_unsigned_int_p_unsigned_int_p_void__FMOD_RESULT.getCPtr(userread), SWIGTYPE_p_f_p_void_unsigned_int_p_void__FMOD_RESULT.getCPtr(userseek)));
  }

  public static FMOD_RESULT FMOD_System_SetAdvancedSettings(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_ADVANCEDSETTINGS settings) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetAdvancedSettings(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), FMOD_ADVANCEDSETTINGS.getCPtr(settings), settings));
  }

  public static FMOD_RESULT FMOD_System_GetAdvancedSettings(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_ADVANCEDSETTINGS settings) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetAdvancedSettings(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), FMOD_ADVANCEDSETTINGS.getCPtr(settings), settings));
  }

  public static FMOD_RESULT FMOD_System_SetCallback(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_f_p_struct_FMOD_SYSTEM_unsigned_int_p_void_p_void_p_void__FMOD_RESULT callback, long callbackmask) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetCallback(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_f_p_struct_FMOD_SYSTEM_unsigned_int_p_void_p_void_p_void__FMOD_RESULT.getCPtr(callback), callbackmask));
  }

  public static FMOD_RESULT FMOD_System_SetPluginPath(SWIGTYPE_p_FMOD_SYSTEM system, byte[] path) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetPluginPath(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), path));
  }

  public static FMOD_RESULT FMOD_System_LoadPlugin(SWIGTYPE_p_FMOD_SYSTEM system, String filename, long[] handle, long priority) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_LoadPlugin(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), filename, handle, priority));
  }

  public static FMOD_RESULT FMOD_System_UnloadPlugin(SWIGTYPE_p_FMOD_SYSTEM system, long handle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_UnloadPlugin(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), handle));
  }

  public static FMOD_RESULT FMOD_System_GetNumNestedPlugins(SWIGTYPE_p_FMOD_SYSTEM system, long handle, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetNumNestedPlugins(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), handle, count));
  }

  public static FMOD_RESULT FMOD_System_GetNestedPlugin(SWIGTYPE_p_FMOD_SYSTEM system, long handle, int index, long[] nestedhandle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetNestedPlugin(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), handle, index, nestedhandle));
  }

  public static FMOD_RESULT FMOD_System_GetNumPlugins(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_PLUGINTYPE plugintype, int[] numplugins) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetNumPlugins(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), plugintype.swigValue(), numplugins));
  }

  public static FMOD_RESULT FMOD_System_GetPluginHandle(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_PLUGINTYPE plugintype, int index, long[] handle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetPluginHandle(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), plugintype.swigValue(), index, handle));
  }

  public static FMOD_RESULT FMOD_System_GetPluginInfo(SWIGTYPE_p_FMOD_SYSTEM system, long handle, SWIGTYPE_p_FMOD_PLUGINTYPE plugintype, String name, int namelen, long[] version) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetPluginInfo(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), handle, SWIGTYPE_p_FMOD_PLUGINTYPE.getCPtr(plugintype), name, namelen, version));
  }

  public static FMOD_RESULT FMOD_System_SetOutputByPlugin(SWIGTYPE_p_FMOD_SYSTEM system, long handle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetOutputByPlugin(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), handle));
  }

  public static FMOD_RESULT FMOD_System_GetOutputByPlugin(SWIGTYPE_p_FMOD_SYSTEM system, long[] handle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetOutputByPlugin(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), handle));
  }

  public static FMOD_RESULT FMOD_System_CreateDSPByPlugin(SWIGTYPE_p_FMOD_SYSTEM system, long handle, SWIGTYPE_p_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_CreateDSPByPlugin(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), handle, SWIGTYPE_p_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_System_GetDSPInfoByPlugin(SWIGTYPE_p_FMOD_SYSTEM system, long handle, SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION description) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetDSPInfoByPlugin(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), handle, SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION.getCPtr(description)));
  }

  public static FMOD_RESULT FMOD_System_RegisterCodec(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_FMOD_CODEC_DESCRIPTION description, long[] handle, long priority) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_RegisterCodec(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_CODEC_DESCRIPTION.getCPtr(description), handle, priority));
  }

  public static FMOD_RESULT FMOD_System_RegisterDSP(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_FMOD_DSP_DESCRIPTION description, long[] handle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_RegisterDSP(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_DSP_DESCRIPTION.getCPtr(description), handle));
  }

  public static FMOD_RESULT FMOD_System_RegisterOutput(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_FMOD_OUTPUT_DESCRIPTION description, long[] handle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_RegisterOutput(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_OUTPUT_DESCRIPTION.getCPtr(description), handle));
  }

  public static FMOD_RESULT FMOD_System_Init(SWIGTYPE_p_FMOD_SYSTEM system, int maxchannels, long flags, SWIGTYPE_p_void extradriverdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Init(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), maxchannels, flags, SWIGTYPE_p_void.getCPtr(extradriverdata)));
  }

  public static FMOD_RESULT FMOD_System_Close(SWIGTYPE_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Close(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_System_Update(SWIGTYPE_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Update(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_System_SetSpeakerPosition(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_SPEAKER speaker, float x, float y, int active) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetSpeakerPosition(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), speaker.swigValue(), x, y, active));
  }

  public static FMOD_RESULT FMOD_System_GetSpeakerPosition(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_SPEAKER speaker, float[] x, float[] y, int[] active) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetSpeakerPosition(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), speaker.swigValue(), x, y, active));
  }

  public static FMOD_RESULT FMOD_System_SetStreamBufferSize(SWIGTYPE_p_FMOD_SYSTEM system, long filebuffersize, long filebuffersizetype) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetStreamBufferSize(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), filebuffersize, filebuffersizetype));
  }

  public static FMOD_RESULT FMOD_System_GetStreamBufferSize(SWIGTYPE_p_FMOD_SYSTEM system, long[] filebuffersize, long[] filebuffersizetype) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetStreamBufferSize(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), filebuffersize, filebuffersizetype));
  }

  public static FMOD_RESULT FMOD_System_Set3DSettings(SWIGTYPE_p_FMOD_SYSTEM system, float dopplerscale, float distancefactor, float rolloffscale) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Set3DSettings(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), dopplerscale, distancefactor, rolloffscale));
  }

  public static FMOD_RESULT FMOD_System_Get3DSettings(SWIGTYPE_p_FMOD_SYSTEM system, float[] dopplerscale, float[] distancefactor, float[] rolloffscale) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Get3DSettings(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), dopplerscale, distancefactor, rolloffscale));
  }

  public static FMOD_RESULT FMOD_System_Set3DNumListeners(SWIGTYPE_p_FMOD_SYSTEM system, int numlisteners) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Set3DNumListeners(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), numlisteners));
  }

  public static FMOD_RESULT FMOD_System_Get3DNumListeners(SWIGTYPE_p_FMOD_SYSTEM system, int[] numlisteners) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Get3DNumListeners(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), numlisteners));
  }

  public static FMOD_RESULT FMOD_System_Set3DListenerAttributes(SWIGTYPE_p_FMOD_SYSTEM system, int listener, FMOD_VECTOR pos, FMOD_VECTOR vel, FMOD_VECTOR forward, FMOD_VECTOR up) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Set3DListenerAttributes(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), listener, FMOD_VECTOR.getCPtr(pos), pos, FMOD_VECTOR.getCPtr(vel), vel, FMOD_VECTOR.getCPtr(forward), forward, FMOD_VECTOR.getCPtr(up), up));
  }

  public static FMOD_RESULT FMOD_System_Get3DListenerAttributes(SWIGTYPE_p_FMOD_SYSTEM system, int listener, FMOD_VECTOR pos, FMOD_VECTOR vel, FMOD_VECTOR forward, FMOD_VECTOR up) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Get3DListenerAttributes(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), listener, FMOD_VECTOR.getCPtr(pos), pos, FMOD_VECTOR.getCPtr(vel), vel, FMOD_VECTOR.getCPtr(forward), forward, FMOD_VECTOR.getCPtr(up), up));
  }

  public static FMOD_RESULT FMOD_System_Set3DRolloffCallback(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_f_p_struct_FMOD_CHANNELCONTROL_float__float callback) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_Set3DRolloffCallback(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_f_p_struct_FMOD_CHANNELCONTROL_float__float.getCPtr(callback)));
  }

  public static FMOD_RESULT FMOD_System_MixerSuspend(SWIGTYPE_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_MixerSuspend(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_System_MixerResume(SWIGTYPE_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_MixerResume(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_System_GetDefaultMixMatrix(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_SPEAKERMODE sourcespeakermode, FMOD_SPEAKERMODE targetspeakermode, float[] matrix, int matrixhop) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetDefaultMixMatrix(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), sourcespeakermode.swigValue(), targetspeakermode.swigValue(), matrix, matrixhop));
  }

  public static FMOD_RESULT FMOD_System_GetSpeakerModeChannels(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_SPEAKERMODE mode, int[] channels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetSpeakerModeChannels(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), mode.swigValue(), channels));
  }

  public static FMOD_RESULT FMOD_System_GetVersion(SWIGTYPE_p_FMOD_SYSTEM system, long[] version) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetVersion(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), version));
  }

  public static FMOD_RESULT FMOD_System_GetOutputHandle(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_p_void handle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetOutputHandle(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_p_void.getCPtr(handle)));
  }

  public static FMOD_RESULT FMOD_System_GetChannelsPlaying(SWIGTYPE_p_FMOD_SYSTEM system, int[] channels, int[] realchannels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetChannelsPlaying(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), channels, realchannels));
  }

  public static FMOD_RESULT FMOD_System_GetCPUUsage(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_CPU_USAGE usage) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetCPUUsage(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), FMOD_CPU_USAGE.getCPtr(usage), usage));
  }

  public static FMOD_RESULT FMOD_System_GetFileUsage(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_long_long sampleBytesRead, SWIGTYPE_p_long_long streamBytesRead, SWIGTYPE_p_long_long otherBytesRead) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetFileUsage(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_long_long.getCPtr(sampleBytesRead), SWIGTYPE_p_long_long.getCPtr(streamBytesRead), SWIGTYPE_p_long_long.getCPtr(otherBytesRead)));
  }

  public static FMOD_RESULT FMOD_System_CreateSound(SWIGTYPE_p_FMOD_SYSTEM system, String name_or_data, long mode, FMOD_CREATESOUNDEXINFO exinfo, SWIGTYPE_p_p_FMOD_SOUND sound) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_CreateSound(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), name_or_data, mode, FMOD_CREATESOUNDEXINFO.getCPtr(exinfo), exinfo, SWIGTYPE_p_p_FMOD_SOUND.getCPtr(sound)));
  }

  public static FMOD_RESULT FMOD_System_CreateStream(SWIGTYPE_p_FMOD_SYSTEM system, String name_or_data, long mode, FMOD_CREATESOUNDEXINFO exinfo, SWIGTYPE_p_p_FMOD_SOUND sound) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_CreateStream(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), name_or_data, mode, FMOD_CREATESOUNDEXINFO.getCPtr(exinfo), exinfo, SWIGTYPE_p_p_FMOD_SOUND.getCPtr(sound)));
  }

  public static FMOD_RESULT FMOD_System_CreateDSP(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_FMOD_DSP_DESCRIPTION description, SWIGTYPE_p_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_CreateDSP(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_DSP_DESCRIPTION.getCPtr(description), SWIGTYPE_p_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_System_CreateDSPByType(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_FMOD_DSP_TYPE type, SWIGTYPE_p_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_CreateDSPByType(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_DSP_TYPE.getCPtr(type), SWIGTYPE_p_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_System_CreateChannelGroup(SWIGTYPE_p_FMOD_SYSTEM system, String name, SWIGTYPE_p_p_FMOD_CHANNELGROUP channelgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_CreateChannelGroup(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), name, SWIGTYPE_p_p_FMOD_CHANNELGROUP.getCPtr(channelgroup)));
  }

  public static FMOD_RESULT FMOD_System_CreateSoundGroup(SWIGTYPE_p_FMOD_SYSTEM system, String name, SWIGTYPE_p_p_FMOD_SOUNDGROUP soundgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_CreateSoundGroup(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), name, SWIGTYPE_p_p_FMOD_SOUNDGROUP.getCPtr(soundgroup)));
  }

  public static FMOD_RESULT FMOD_System_CreateReverb3D(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_p_FMOD_REVERB3D reverb) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_CreateReverb3D(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_p_FMOD_REVERB3D.getCPtr(reverb)));
  }

  public static FMOD_RESULT FMOD_System_PlaySound(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int paused, SWIGTYPE_p_p_FMOD_CHANNEL channel) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_PlaySound(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), paused, SWIGTYPE_p_p_FMOD_CHANNEL.getCPtr(channel)));
  }

  public static FMOD_RESULT FMOD_System_PlayDSP(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_FMOD_DSP dsp, SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int paused, SWIGTYPE_p_p_FMOD_CHANNEL channel) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_PlayDSP(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), paused, SWIGTYPE_p_p_FMOD_CHANNEL.getCPtr(channel)));
  }

  public static FMOD_RESULT FMOD_System_GetChannel(SWIGTYPE_p_FMOD_SYSTEM system, int channelid, SWIGTYPE_p_p_FMOD_CHANNEL channel) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetChannel(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), channelid, SWIGTYPE_p_p_FMOD_CHANNEL.getCPtr(channel)));
  }

  public static FMOD_RESULT FMOD_System_GetDSPInfoByType(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_FMOD_DSP_TYPE type, SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION description) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetDSPInfoByType(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_DSP_TYPE.getCPtr(type), SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION.getCPtr(description)));
  }

  public static FMOD_RESULT FMOD_System_GetMasterChannelGroup(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_p_FMOD_CHANNELGROUP channelgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetMasterChannelGroup(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_p_FMOD_CHANNELGROUP.getCPtr(channelgroup)));
  }

  public static FMOD_RESULT FMOD_System_GetMasterSoundGroup(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_p_FMOD_SOUNDGROUP soundgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetMasterSoundGroup(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_p_FMOD_SOUNDGROUP.getCPtr(soundgroup)));
  }

  public static FMOD_RESULT FMOD_System_AttachChannelGroupToPort(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_PORT_TYPE portType, java.math.BigInteger portIndex, SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int passThru) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_AttachChannelGroupToPort(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), portType.swigValue(), portIndex, SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), passThru));
  }

  public static FMOD_RESULT FMOD_System_DetachChannelGroupFromPort(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_DetachChannelGroupFromPort(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup)));
  }

  public static FMOD_RESULT FMOD_System_SetReverbProperties(SWIGTYPE_p_FMOD_SYSTEM system, int instance, FMOD_REVERB_PROPERTIES prop) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetReverbProperties(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), instance, FMOD_REVERB_PROPERTIES.getCPtr(prop), prop));
  }

  public static FMOD_RESULT FMOD_System_GetReverbProperties(SWIGTYPE_p_FMOD_SYSTEM system, int instance, FMOD_REVERB_PROPERTIES prop) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetReverbProperties(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), instance, FMOD_REVERB_PROPERTIES.getCPtr(prop), prop));
  }

  public static FMOD_RESULT FMOD_System_LockDSP(SWIGTYPE_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_LockDSP(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_System_UnlockDSP(SWIGTYPE_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_UnlockDSP(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_System_GetRecordNumDrivers(SWIGTYPE_p_FMOD_SYSTEM system, int[] numdrivers, int[] numconnected) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetRecordNumDrivers(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), numdrivers, numconnected));
  }

  public static FMOD_RESULT FMOD_System_GetRecordDriverInfo(SWIGTYPE_p_FMOD_SYSTEM system, int id, String name, int namelen, FMOD_GUID guid, int[] systemrate, SWIGTYPE_p_FMOD_SPEAKERMODE speakermode, int[] speakermodechannels, long[] state) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetRecordDriverInfo(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), id, name, namelen, FMOD_GUID.getCPtr(guid), guid, systemrate, SWIGTYPE_p_FMOD_SPEAKERMODE.getCPtr(speakermode), speakermodechannels, state));
  }

  public static FMOD_RESULT FMOD_System_GetRecordPosition(SWIGTYPE_p_FMOD_SYSTEM system, int id, long[] position) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetRecordPosition(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), id, position));
  }

  public static FMOD_RESULT FMOD_System_RecordStart(SWIGTYPE_p_FMOD_SYSTEM system, int id, SWIGTYPE_p_FMOD_SOUND sound, int loop) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_RecordStart(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), id, SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), loop));
  }

  public static FMOD_RESULT FMOD_System_RecordStop(SWIGTYPE_p_FMOD_SYSTEM system, int id) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_RecordStop(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), id));
  }

  public static FMOD_RESULT FMOD_System_IsRecording(SWIGTYPE_p_FMOD_SYSTEM system, int id, int[] recording) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_IsRecording(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), id, recording));
  }

  public static FMOD_RESULT FMOD_System_CreateGeometry(SWIGTYPE_p_FMOD_SYSTEM system, int maxpolygons, int maxvertices, SWIGTYPE_p_p_FMOD_GEOMETRY geometry) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_CreateGeometry(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), maxpolygons, maxvertices, SWIGTYPE_p_p_FMOD_GEOMETRY.getCPtr(geometry)));
  }

  public static FMOD_RESULT FMOD_System_SetGeometrySettings(SWIGTYPE_p_FMOD_SYSTEM system, float maxworldsize) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetGeometrySettings(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), maxworldsize));
  }

  public static FMOD_RESULT FMOD_System_GetGeometrySettings(SWIGTYPE_p_FMOD_SYSTEM system, float[] maxworldsize) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetGeometrySettings(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), maxworldsize));
  }

  public static FMOD_RESULT FMOD_System_LoadGeometry(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_void data, int datasize, SWIGTYPE_p_p_FMOD_GEOMETRY geometry) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_LoadGeometry(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_void.getCPtr(data), datasize, SWIGTYPE_p_p_FMOD_GEOMETRY.getCPtr(geometry)));
  }

  public static FMOD_RESULT FMOD_System_GetGeometryOcclusion(SWIGTYPE_p_FMOD_SYSTEM system, FMOD_VECTOR listener, FMOD_VECTOR source, float[] direct, float[] reverb) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetGeometryOcclusion(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), FMOD_VECTOR.getCPtr(listener), listener, FMOD_VECTOR.getCPtr(source), source, direct, reverb));
  }

  public static FMOD_RESULT FMOD_System_SetNetworkProxy(SWIGTYPE_p_FMOD_SYSTEM system, String proxy) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetNetworkProxy(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), proxy));
  }

  public static FMOD_RESULT FMOD_System_GetNetworkProxy(SWIGTYPE_p_FMOD_SYSTEM system, String proxy, int proxylen) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetNetworkProxy(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), proxy, proxylen));
  }

  public static FMOD_RESULT FMOD_System_SetNetworkTimeout(SWIGTYPE_p_FMOD_SYSTEM system, int timeout) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetNetworkTimeout(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), timeout));
  }

  public static FMOD_RESULT FMOD_System_GetNetworkTimeout(SWIGTYPE_p_FMOD_SYSTEM system, int[] timeout) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetNetworkTimeout(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), timeout));
  }

  public static FMOD_RESULT FMOD_System_SetUserData(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_SetUserData(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_System_GetUserData(SWIGTYPE_p_FMOD_SYSTEM system, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_System_GetUserData(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(system), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Sound_Release(SWIGTYPE_p_FMOD_SOUND sound) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_Release(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound)));
  }

  public static FMOD_RESULT FMOD_Sound_GetSystemObject(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetSystemObject(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_Sound_Lock(SWIGTYPE_p_FMOD_SOUND sound, long offset, long length, SWIGTYPE_p_p_void ptr1, SWIGTYPE_p_p_void ptr2, long[] len1, long[] len2) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_Lock(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), offset, length, SWIGTYPE_p_p_void.getCPtr(ptr1), SWIGTYPE_p_p_void.getCPtr(ptr2), len1, len2));
  }

  public static FMOD_RESULT FMOD_Sound_Unlock(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_void ptr1, SWIGTYPE_p_void ptr2, long len1, long len2) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_Unlock(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_void.getCPtr(ptr1), SWIGTYPE_p_void.getCPtr(ptr2), len1, len2));
  }

  public static FMOD_RESULT FMOD_Sound_SetDefaults(SWIGTYPE_p_FMOD_SOUND sound, float frequency, int priority) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_SetDefaults(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), frequency, priority));
  }

  public static FMOD_RESULT FMOD_Sound_GetDefaults(SWIGTYPE_p_FMOD_SOUND sound, float[] frequency, int[] priority) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetDefaults(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), frequency, priority));
  }

  public static FMOD_RESULT FMOD_Sound_Set3DMinMaxDistance(SWIGTYPE_p_FMOD_SOUND sound, float min, float max) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_Set3DMinMaxDistance(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), min, max));
  }

  public static FMOD_RESULT FMOD_Sound_Get3DMinMaxDistance(SWIGTYPE_p_FMOD_SOUND sound, float[] min, float[] max) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_Get3DMinMaxDistance(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), min, max));
  }

  public static FMOD_RESULT FMOD_Sound_Set3DConeSettings(SWIGTYPE_p_FMOD_SOUND sound, float insideconeangle, float outsideconeangle, float outsidevolume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_Set3DConeSettings(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), insideconeangle, outsideconeangle, outsidevolume));
  }

  public static FMOD_RESULT FMOD_Sound_Get3DConeSettings(SWIGTYPE_p_FMOD_SOUND sound, float[] insideconeangle, float[] outsideconeangle, float[] outsidevolume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_Get3DConeSettings(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), insideconeangle, outsideconeangle, outsidevolume));
  }

  public static FMOD_RESULT FMOD_Sound_Set3DCustomRolloff(SWIGTYPE_p_FMOD_SOUND sound, FMOD_VECTOR points, int numpoints) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_Set3DCustomRolloff(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), FMOD_VECTOR.getCPtr(points), points, numpoints));
  }

  public static FMOD_RESULT FMOD_Sound_Get3DCustomRolloff(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_p_FMOD_VECTOR points, int[] numpoints) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_Get3DCustomRolloff(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_p_FMOD_VECTOR.getCPtr(points), numpoints));
  }

  public static FMOD_RESULT FMOD_Sound_GetSubSound(SWIGTYPE_p_FMOD_SOUND sound, int index, SWIGTYPE_p_p_FMOD_SOUND subsound) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetSubSound(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), index, SWIGTYPE_p_p_FMOD_SOUND.getCPtr(subsound)));
  }

  public static FMOD_RESULT FMOD_Sound_GetSubSoundParent(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_p_FMOD_SOUND parentsound) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetSubSoundParent(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_p_FMOD_SOUND.getCPtr(parentsound)));
  }

  public static FMOD_RESULT FMOD_Sound_GetName(SWIGTYPE_p_FMOD_SOUND sound, String name, int namelen) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetName(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), name, namelen));
  }

  public static FMOD_RESULT FMOD_Sound_GetLength(SWIGTYPE_p_FMOD_SOUND sound, long[] length, long lengthtype) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetLength(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), length, lengthtype));
  }

  public static FMOD_RESULT FMOD_Sound_GetFormat(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_FMOD_SOUND_TYPE type, SWIGTYPE_p_FMOD_SOUND_FORMAT format, int[] channels, int[] bits) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetFormat(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_FMOD_SOUND_TYPE.getCPtr(type), SWIGTYPE_p_FMOD_SOUND_FORMAT.getCPtr(format), channels, bits));
  }

  public static FMOD_RESULT FMOD_Sound_GetNumSubSounds(SWIGTYPE_p_FMOD_SOUND sound, int[] numsubsounds) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetNumSubSounds(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), numsubsounds));
  }

  public static FMOD_RESULT FMOD_Sound_GetNumTags(SWIGTYPE_p_FMOD_SOUND sound, int[] numtags, int[] numtagsupdated) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetNumTags(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), numtags, numtagsupdated));
  }

  public static FMOD_RESULT FMOD_Sound_GetTag(SWIGTYPE_p_FMOD_SOUND sound, String name, int index, FMOD_TAG tag) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetTag(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), name, index, FMOD_TAG.getCPtr(tag), tag));
  }

  public static FMOD_RESULT FMOD_Sound_GetOpenState(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_FMOD_OPENSTATE openstate, long[] percentbuffered, int[] starving, int[] diskbusy) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetOpenState(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_FMOD_OPENSTATE.getCPtr(openstate), percentbuffered, starving, diskbusy));
  }

  public static FMOD_RESULT FMOD_Sound_ReadData(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_void buffer, long length, long[] read) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_ReadData(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_void.getCPtr(buffer), length, read));
  }

  public static FMOD_RESULT FMOD_Sound_SeekData(SWIGTYPE_p_FMOD_SOUND sound, long pcm) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_SeekData(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), pcm));
  }

  public static FMOD_RESULT FMOD_Sound_SetSoundGroup(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_SetSoundGroup(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup)));
  }

  public static FMOD_RESULT FMOD_Sound_GetSoundGroup(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_p_FMOD_SOUNDGROUP soundgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetSoundGroup(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_p_FMOD_SOUNDGROUP.getCPtr(soundgroup)));
  }

  public static FMOD_RESULT FMOD_Sound_GetNumSyncPoints(SWIGTYPE_p_FMOD_SOUND sound, int[] numsyncpoints) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetNumSyncPoints(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), numsyncpoints));
  }

  public static FMOD_RESULT FMOD_Sound_GetSyncPoint(SWIGTYPE_p_FMOD_SOUND sound, int index, SWIGTYPE_p_p_FMOD_SYNCPOINT point) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetSyncPoint(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), index, SWIGTYPE_p_p_FMOD_SYNCPOINT.getCPtr(point)));
  }

  public static FMOD_RESULT FMOD_Sound_GetSyncPointInfo(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_FMOD_SYNCPOINT point, String name, int namelen, long[] offset, long offsettype) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetSyncPointInfo(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_FMOD_SYNCPOINT.getCPtr(point), name, namelen, offset, offsettype));
  }

  public static FMOD_RESULT FMOD_Sound_AddSyncPoint(SWIGTYPE_p_FMOD_SOUND sound, long offset, long offsettype, String name, SWIGTYPE_p_p_FMOD_SYNCPOINT point) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_AddSyncPoint(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), offset, offsettype, name, SWIGTYPE_p_p_FMOD_SYNCPOINT.getCPtr(point)));
  }

  public static FMOD_RESULT FMOD_Sound_DeleteSyncPoint(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_FMOD_SYNCPOINT point) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_DeleteSyncPoint(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_FMOD_SYNCPOINT.getCPtr(point)));
  }

  public static FMOD_RESULT FMOD_Sound_SetMode(SWIGTYPE_p_FMOD_SOUND sound, long mode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_SetMode(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), mode));
  }

  public static FMOD_RESULT FMOD_Sound_GetMode(SWIGTYPE_p_FMOD_SOUND sound, long[] mode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetMode(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), mode));
  }

  public static FMOD_RESULT FMOD_Sound_SetLoopCount(SWIGTYPE_p_FMOD_SOUND sound, int loopcount) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_SetLoopCount(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), loopcount));
  }

  public static FMOD_RESULT FMOD_Sound_GetLoopCount(SWIGTYPE_p_FMOD_SOUND sound, int[] loopcount) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetLoopCount(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), loopcount));
  }

  public static FMOD_RESULT FMOD_Sound_SetLoopPoints(SWIGTYPE_p_FMOD_SOUND sound, long loopstart, long loopstarttype, long loopend, long loopendtype) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_SetLoopPoints(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), loopstart, loopstarttype, loopend, loopendtype));
  }

  public static FMOD_RESULT FMOD_Sound_GetLoopPoints(SWIGTYPE_p_FMOD_SOUND sound, long[] loopstart, long loopstarttype, long[] loopend, long loopendtype) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetLoopPoints(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), loopstart, loopstarttype, loopend, loopendtype));
  }

  public static FMOD_RESULT FMOD_Sound_GetMusicNumChannels(SWIGTYPE_p_FMOD_SOUND sound, int[] numchannels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetMusicNumChannels(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), numchannels));
  }

  public static FMOD_RESULT FMOD_Sound_SetMusicChannelVolume(SWIGTYPE_p_FMOD_SOUND sound, int channel, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_SetMusicChannelVolume(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), channel, volume));
  }

  public static FMOD_RESULT FMOD_Sound_GetMusicChannelVolume(SWIGTYPE_p_FMOD_SOUND sound, int channel, float[] volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetMusicChannelVolume(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), channel, volume));
  }

  public static FMOD_RESULT FMOD_Sound_SetMusicSpeed(SWIGTYPE_p_FMOD_SOUND sound, float speed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_SetMusicSpeed(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), speed));
  }

  public static FMOD_RESULT FMOD_Sound_GetMusicSpeed(SWIGTYPE_p_FMOD_SOUND sound, float[] speed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetMusicSpeed(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), speed));
  }

  public static FMOD_RESULT FMOD_Sound_SetUserData(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_SetUserData(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Sound_GetUserData(SWIGTYPE_p_FMOD_SOUND sound, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Sound_GetUserData(SWIGTYPE_p_FMOD_SOUND.getCPtr(sound), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Channel_GetSystemObject(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetSystemObject(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_Channel_Stop(SWIGTYPE_p_FMOD_CHANNEL channel) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Stop(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel)));
  }

  public static FMOD_RESULT FMOD_Channel_SetPaused(SWIGTYPE_p_FMOD_CHANNEL channel, int paused) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetPaused(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), paused));
  }

  public static FMOD_RESULT FMOD_Channel_GetPaused(SWIGTYPE_p_FMOD_CHANNEL channel, int[] paused) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetPaused(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), paused));
  }

  public static FMOD_RESULT FMOD_Channel_SetVolume(SWIGTYPE_p_FMOD_CHANNEL channel, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetVolume(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), volume));
  }

  public static FMOD_RESULT FMOD_Channel_GetVolume(SWIGTYPE_p_FMOD_CHANNEL channel, float[] volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetVolume(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), volume));
  }

  public static FMOD_RESULT FMOD_Channel_SetVolumeRamp(SWIGTYPE_p_FMOD_CHANNEL channel, int ramp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetVolumeRamp(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), ramp));
  }

  public static FMOD_RESULT FMOD_Channel_GetVolumeRamp(SWIGTYPE_p_FMOD_CHANNEL channel, int[] ramp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetVolumeRamp(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), ramp));
  }

  public static FMOD_RESULT FMOD_Channel_GetAudibility(SWIGTYPE_p_FMOD_CHANNEL channel, float[] audibility) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetAudibility(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), audibility));
  }

  public static FMOD_RESULT FMOD_Channel_SetPitch(SWIGTYPE_p_FMOD_CHANNEL channel, float pitch) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetPitch(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), pitch));
  }

  public static FMOD_RESULT FMOD_Channel_GetPitch(SWIGTYPE_p_FMOD_CHANNEL channel, float[] pitch) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetPitch(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), pitch));
  }

  public static FMOD_RESULT FMOD_Channel_SetMute(SWIGTYPE_p_FMOD_CHANNEL channel, int mute) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetMute(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), mute));
  }

  public static FMOD_RESULT FMOD_Channel_GetMute(SWIGTYPE_p_FMOD_CHANNEL channel, int[] mute) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetMute(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), mute));
  }

  public static FMOD_RESULT FMOD_Channel_SetReverbProperties(SWIGTYPE_p_FMOD_CHANNEL channel, int instance, float wet) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetReverbProperties(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), instance, wet));
  }

  public static FMOD_RESULT FMOD_Channel_GetReverbProperties(SWIGTYPE_p_FMOD_CHANNEL channel, int instance, float[] wet) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetReverbProperties(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), instance, wet));
  }

  public static FMOD_RESULT FMOD_Channel_SetLowPassGain(SWIGTYPE_p_FMOD_CHANNEL channel, float gain) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetLowPassGain(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), gain));
  }

  public static FMOD_RESULT FMOD_Channel_GetLowPassGain(SWIGTYPE_p_FMOD_CHANNEL channel, float[] gain) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetLowPassGain(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), gain));
  }

  public static FMOD_RESULT FMOD_Channel_SetMode(SWIGTYPE_p_FMOD_CHANNEL channel, long mode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetMode(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), mode));
  }

  public static FMOD_RESULT FMOD_Channel_GetMode(SWIGTYPE_p_FMOD_CHANNEL channel, long[] mode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetMode(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), mode));
  }

  public static FMOD_RESULT FMOD_Channel_SetCallback(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_f_p_struct_FMOD_CHANNELCONTROL_enum_FMOD_CHANNELCONTROL_TYPE_enum_FMOD_CHANNELCONTROL_CALLBACK_TYPE_p_void_p_void__FMOD_RESULT callback) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetCallback(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_f_p_struct_FMOD_CHANNELCONTROL_enum_FMOD_CHANNELCONTROL_TYPE_enum_FMOD_CHANNELCONTROL_CALLBACK_TYPE_p_void_p_void__FMOD_RESULT.getCPtr(callback)));
  }

  public static FMOD_RESULT FMOD_Channel_IsPlaying(SWIGTYPE_p_FMOD_CHANNEL channel, int[] isplaying) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_IsPlaying(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), isplaying));
  }

  public static FMOD_RESULT FMOD_Channel_SetPan(SWIGTYPE_p_FMOD_CHANNEL channel, float pan) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetPan(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), pan));
  }

  public static FMOD_RESULT FMOD_Channel_SetMixLevelsOutput(SWIGTYPE_p_FMOD_CHANNEL channel, float frontleft, float frontright, float center, float lfe, float surroundleft, float surroundright, float backleft, float backright) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetMixLevelsOutput(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), frontleft, frontright, center, lfe, surroundleft, surroundright, backleft, backright));
  }

  public static FMOD_RESULT FMOD_Channel_SetMixLevelsInput(SWIGTYPE_p_FMOD_CHANNEL channel, float[] levels, int numlevels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetMixLevelsInput(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), levels, numlevels));
  }

  public static FMOD_RESULT FMOD_Channel_SetMixMatrix(SWIGTYPE_p_FMOD_CHANNEL channel, float[] matrix, int outchannels, int inchannels, int inchannel_hop) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetMixMatrix(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), matrix, outchannels, inchannels, inchannel_hop));
  }

  public static FMOD_RESULT FMOD_Channel_GetMixMatrix(SWIGTYPE_p_FMOD_CHANNEL channel, float[] matrix, int[] outchannels, int[] inchannels, int inchannel_hop) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetMixMatrix(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), matrix, outchannels, inchannels, inchannel_hop));
  }

  public static FMOD_RESULT FMOD_Channel_GetDSPClock(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_unsigned_long_long dspclock, SWIGTYPE_p_unsigned_long_long parentclock) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetDSPClock(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock), SWIGTYPE_p_unsigned_long_long.getCPtr(parentclock)));
  }

  public static FMOD_RESULT FMOD_Channel_SetDelay(SWIGTYPE_p_FMOD_CHANNEL channel, java.math.BigInteger dspclock_start, java.math.BigInteger dspclock_end, int stopchannels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetDelay(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), dspclock_start, dspclock_end, stopchannels));
  }

  public static FMOD_RESULT FMOD_Channel_GetDelay(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_unsigned_long_long dspclock_start, SWIGTYPE_p_unsigned_long_long dspclock_end, int[] stopchannels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetDelay(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock_start), SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock_end), stopchannels));
  }

  public static FMOD_RESULT FMOD_Channel_AddFadePoint(SWIGTYPE_p_FMOD_CHANNEL channel, java.math.BigInteger dspclock, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_AddFadePoint(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), dspclock, volume));
  }

  public static FMOD_RESULT FMOD_Channel_SetFadePointRamp(SWIGTYPE_p_FMOD_CHANNEL channel, java.math.BigInteger dspclock, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetFadePointRamp(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), dspclock, volume));
  }

  public static FMOD_RESULT FMOD_Channel_RemoveFadePoints(SWIGTYPE_p_FMOD_CHANNEL channel, java.math.BigInteger dspclock_start, java.math.BigInteger dspclock_end) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_RemoveFadePoints(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), dspclock_start, dspclock_end));
  }

  public static FMOD_RESULT FMOD_Channel_GetFadePoints(SWIGTYPE_p_FMOD_CHANNEL channel, long[] numpoints, SWIGTYPE_p_unsigned_long_long point_dspclock, float[] point_volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetFadePoints(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), numpoints, SWIGTYPE_p_unsigned_long_long.getCPtr(point_dspclock), point_volume));
  }

  public static FMOD_RESULT FMOD_Channel_GetDSP(SWIGTYPE_p_FMOD_CHANNEL channel, int index, SWIGTYPE_p_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetDSP(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), index, SWIGTYPE_p_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_Channel_AddDSP(SWIGTYPE_p_FMOD_CHANNEL channel, int index, SWIGTYPE_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_AddDSP(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), index, SWIGTYPE_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_Channel_RemoveDSP(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_RemoveDSP(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_Channel_GetNumDSPs(SWIGTYPE_p_FMOD_CHANNEL channel, int[] numdsps) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetNumDSPs(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), numdsps));
  }

  public static FMOD_RESULT FMOD_Channel_SetDSPIndex(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_FMOD_DSP dsp, int index) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetDSPIndex(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index));
  }

  public static FMOD_RESULT FMOD_Channel_GetDSPIndex(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_FMOD_DSP dsp, int[] index) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetDSPIndex(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index));
  }

  public static FMOD_RESULT FMOD_Channel_Set3DAttributes(SWIGTYPE_p_FMOD_CHANNEL channel, FMOD_VECTOR pos, FMOD_VECTOR vel) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Set3DAttributes(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), FMOD_VECTOR.getCPtr(pos), pos, FMOD_VECTOR.getCPtr(vel), vel));
  }

  public static FMOD_RESULT FMOD_Channel_Get3DAttributes(SWIGTYPE_p_FMOD_CHANNEL channel, FMOD_VECTOR pos, FMOD_VECTOR vel) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Get3DAttributes(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), FMOD_VECTOR.getCPtr(pos), pos, FMOD_VECTOR.getCPtr(vel), vel));
  }

  public static FMOD_RESULT FMOD_Channel_Set3DMinMaxDistance(SWIGTYPE_p_FMOD_CHANNEL channel, float mindistance, float maxdistance) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Set3DMinMaxDistance(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), mindistance, maxdistance));
  }

  public static FMOD_RESULT FMOD_Channel_Get3DMinMaxDistance(SWIGTYPE_p_FMOD_CHANNEL channel, float[] mindistance, float[] maxdistance) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Get3DMinMaxDistance(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), mindistance, maxdistance));
  }

  public static FMOD_RESULT FMOD_Channel_Set3DConeSettings(SWIGTYPE_p_FMOD_CHANNEL channel, float insideconeangle, float outsideconeangle, float outsidevolume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Set3DConeSettings(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), insideconeangle, outsideconeangle, outsidevolume));
  }

  public static FMOD_RESULT FMOD_Channel_Get3DConeSettings(SWIGTYPE_p_FMOD_CHANNEL channel, float[] insideconeangle, float[] outsideconeangle, float[] outsidevolume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Get3DConeSettings(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), insideconeangle, outsideconeangle, outsidevolume));
  }

  public static FMOD_RESULT FMOD_Channel_Set3DConeOrientation(SWIGTYPE_p_FMOD_CHANNEL channel, FMOD_VECTOR orientation) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Set3DConeOrientation(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), FMOD_VECTOR.getCPtr(orientation), orientation));
  }

  public static FMOD_RESULT FMOD_Channel_Get3DConeOrientation(SWIGTYPE_p_FMOD_CHANNEL channel, FMOD_VECTOR orientation) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Get3DConeOrientation(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), FMOD_VECTOR.getCPtr(orientation), orientation));
  }

  public static FMOD_RESULT FMOD_Channel_Set3DCustomRolloff(SWIGTYPE_p_FMOD_CHANNEL channel, FMOD_VECTOR points, int numpoints) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Set3DCustomRolloff(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), FMOD_VECTOR.getCPtr(points), points, numpoints));
  }

  public static FMOD_RESULT FMOD_Channel_Get3DCustomRolloff(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_p_FMOD_VECTOR points, int[] numpoints) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Get3DCustomRolloff(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_p_FMOD_VECTOR.getCPtr(points), numpoints));
  }

  public static FMOD_RESULT FMOD_Channel_Set3DOcclusion(SWIGTYPE_p_FMOD_CHANNEL channel, float directocclusion, float reverbocclusion) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Set3DOcclusion(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), directocclusion, reverbocclusion));
  }

  public static FMOD_RESULT FMOD_Channel_Get3DOcclusion(SWIGTYPE_p_FMOD_CHANNEL channel, float[] directocclusion, float[] reverbocclusion) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Get3DOcclusion(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), directocclusion, reverbocclusion));
  }

  public static FMOD_RESULT FMOD_Channel_Set3DSpread(SWIGTYPE_p_FMOD_CHANNEL channel, float angle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Set3DSpread(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), angle));
  }

  public static FMOD_RESULT FMOD_Channel_Get3DSpread(SWIGTYPE_p_FMOD_CHANNEL channel, float[] angle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Get3DSpread(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), angle));
  }

  public static FMOD_RESULT FMOD_Channel_Set3DLevel(SWIGTYPE_p_FMOD_CHANNEL channel, float level) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Set3DLevel(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), level));
  }

  public static FMOD_RESULT FMOD_Channel_Get3DLevel(SWIGTYPE_p_FMOD_CHANNEL channel, float[] level) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Get3DLevel(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), level));
  }

  public static FMOD_RESULT FMOD_Channel_Set3DDopplerLevel(SWIGTYPE_p_FMOD_CHANNEL channel, float level) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Set3DDopplerLevel(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), level));
  }

  public static FMOD_RESULT FMOD_Channel_Get3DDopplerLevel(SWIGTYPE_p_FMOD_CHANNEL channel, float[] level) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Get3DDopplerLevel(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), level));
  }

  public static FMOD_RESULT FMOD_Channel_Set3DDistanceFilter(SWIGTYPE_p_FMOD_CHANNEL channel, int custom, float customLevel, float centerFreq) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Set3DDistanceFilter(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), custom, customLevel, centerFreq));
  }

  public static FMOD_RESULT FMOD_Channel_Get3DDistanceFilter(SWIGTYPE_p_FMOD_CHANNEL channel, int[] custom, float[] customLevel, float[] centerFreq) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_Get3DDistanceFilter(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), custom, customLevel, centerFreq));
  }

  public static FMOD_RESULT FMOD_Channel_SetUserData(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetUserData(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Channel_GetUserData(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetUserData(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Channel_SetFrequency(SWIGTYPE_p_FMOD_CHANNEL channel, float frequency) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetFrequency(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), frequency));
  }

  public static FMOD_RESULT FMOD_Channel_GetFrequency(SWIGTYPE_p_FMOD_CHANNEL channel, float[] frequency) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetFrequency(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), frequency));
  }

  public static FMOD_RESULT FMOD_Channel_SetPriority(SWIGTYPE_p_FMOD_CHANNEL channel, int priority) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetPriority(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), priority));
  }

  public static FMOD_RESULT FMOD_Channel_GetPriority(SWIGTYPE_p_FMOD_CHANNEL channel, int[] priority) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetPriority(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), priority));
  }

  public static FMOD_RESULT FMOD_Channel_SetPosition(SWIGTYPE_p_FMOD_CHANNEL channel, long position, long postype) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetPosition(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), position, postype));
  }

  public static FMOD_RESULT FMOD_Channel_GetPosition(SWIGTYPE_p_FMOD_CHANNEL channel, long[] position, long postype) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetPosition(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), position, postype));
  }

  public static FMOD_RESULT FMOD_Channel_SetChannelGroup(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetChannelGroup(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup)));
  }

  public static FMOD_RESULT FMOD_Channel_GetChannelGroup(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_p_FMOD_CHANNELGROUP channelgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetChannelGroup(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_p_FMOD_CHANNELGROUP.getCPtr(channelgroup)));
  }

  public static FMOD_RESULT FMOD_Channel_SetLoopCount(SWIGTYPE_p_FMOD_CHANNEL channel, int loopcount) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetLoopCount(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), loopcount));
  }

  public static FMOD_RESULT FMOD_Channel_GetLoopCount(SWIGTYPE_p_FMOD_CHANNEL channel, int[] loopcount) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetLoopCount(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), loopcount));
  }

  public static FMOD_RESULT FMOD_Channel_SetLoopPoints(SWIGTYPE_p_FMOD_CHANNEL channel, long loopstart, long loopstarttype, long loopend, long loopendtype) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_SetLoopPoints(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), loopstart, loopstarttype, loopend, loopendtype));
  }

  public static FMOD_RESULT FMOD_Channel_GetLoopPoints(SWIGTYPE_p_FMOD_CHANNEL channel, long[] loopstart, long loopstarttype, long[] loopend, long loopendtype) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetLoopPoints(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), loopstart, loopstarttype, loopend, loopendtype));
  }

  public static FMOD_RESULT FMOD_Channel_IsVirtual(SWIGTYPE_p_FMOD_CHANNEL channel, int[] isvirtual) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_IsVirtual(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), isvirtual));
  }

  public static FMOD_RESULT FMOD_Channel_GetCurrentSound(SWIGTYPE_p_FMOD_CHANNEL channel, SWIGTYPE_p_p_FMOD_SOUND sound) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetCurrentSound(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), SWIGTYPE_p_p_FMOD_SOUND.getCPtr(sound)));
  }

  public static FMOD_RESULT FMOD_Channel_GetIndex(SWIGTYPE_p_FMOD_CHANNEL channel, int[] index) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Channel_GetIndex(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(channel), index));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetSystemObject(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetSystemObject(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Stop(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Stop(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetPaused(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int paused) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetPaused(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), paused));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetPaused(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int[] paused) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetPaused(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), paused));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetVolume(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetVolume(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), volume));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetVolume(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetVolume(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), volume));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetVolumeRamp(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int ramp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetVolumeRamp(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), ramp));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetVolumeRamp(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int[] ramp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetVolumeRamp(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), ramp));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetAudibility(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] audibility) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetAudibility(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), audibility));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetPitch(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float pitch) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetPitch(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), pitch));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetPitch(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] pitch) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetPitch(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), pitch));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetMute(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int mute) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetMute(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), mute));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetMute(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int[] mute) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetMute(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), mute));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetReverbProperties(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int instance, float wet) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetReverbProperties(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), instance, wet));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetReverbProperties(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int instance, float[] wet) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetReverbProperties(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), instance, wet));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetLowPassGain(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float gain) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetLowPassGain(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), gain));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetLowPassGain(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] gain) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetLowPassGain(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), gain));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetMode(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, long mode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetMode(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), mode));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetMode(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, long[] mode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetMode(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), mode));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetCallback(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_f_p_struct_FMOD_CHANNELCONTROL_enum_FMOD_CHANNELCONTROL_TYPE_enum_FMOD_CHANNELCONTROL_CALLBACK_TYPE_p_void_p_void__FMOD_RESULT callback) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetCallback(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_f_p_struct_FMOD_CHANNELCONTROL_enum_FMOD_CHANNELCONTROL_TYPE_enum_FMOD_CHANNELCONTROL_CALLBACK_TYPE_p_void_p_void__FMOD_RESULT.getCPtr(callback)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_IsPlaying(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int[] isplaying) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_IsPlaying(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), isplaying));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetPan(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float pan) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetPan(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), pan));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetMixLevelsOutput(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float frontleft, float frontright, float center, float lfe, float surroundleft, float surroundright, float backleft, float backright) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetMixLevelsOutput(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), frontleft, frontright, center, lfe, surroundleft, surroundright, backleft, backright));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetMixLevelsInput(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] levels, int numlevels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetMixLevelsInput(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), levels, numlevels));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetMixMatrix(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] matrix, int outchannels, int inchannels, int inchannel_hop) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetMixMatrix(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), matrix, outchannels, inchannels, inchannel_hop));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetMixMatrix(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] matrix, int[] outchannels, int[] inchannels, int inchannel_hop) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetMixMatrix(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), matrix, outchannels, inchannels, inchannel_hop));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetDSPClock(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_unsigned_long_long dspclock, SWIGTYPE_p_unsigned_long_long parentclock) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetDSPClock(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock), SWIGTYPE_p_unsigned_long_long.getCPtr(parentclock)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetDelay(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, java.math.BigInteger dspclock_start, java.math.BigInteger dspclock_end, int stopchannels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetDelay(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), dspclock_start, dspclock_end, stopchannels));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetDelay(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_unsigned_long_long dspclock_start, SWIGTYPE_p_unsigned_long_long dspclock_end, int[] stopchannels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetDelay(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock_start), SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock_end), stopchannels));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_AddFadePoint(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, java.math.BigInteger dspclock, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_AddFadePoint(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), dspclock, volume));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetFadePointRamp(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, java.math.BigInteger dspclock, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetFadePointRamp(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), dspclock, volume));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_RemoveFadePoints(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, java.math.BigInteger dspclock_start, java.math.BigInteger dspclock_end) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_RemoveFadePoints(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), dspclock_start, dspclock_end));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetFadePoints(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, long[] numpoints, SWIGTYPE_p_unsigned_long_long point_dspclock, float[] point_volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetFadePoints(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), numpoints, SWIGTYPE_p_unsigned_long_long.getCPtr(point_dspclock), point_volume));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetDSP(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int index, SWIGTYPE_p_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetDSP(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), index, SWIGTYPE_p_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_AddDSP(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int index, SWIGTYPE_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_AddDSP(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), index, SWIGTYPE_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_RemoveDSP(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_RemoveDSP(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetNumDSPs(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int[] numdsps) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetNumDSPs(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), numdsps));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetDSPIndex(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_FMOD_DSP dsp, int index) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetDSPIndex(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetDSPIndex(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_FMOD_DSP dsp, int[] index) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetDSPIndex(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Set3DAttributes(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, FMOD_VECTOR pos, FMOD_VECTOR vel) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Set3DAttributes(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), FMOD_VECTOR.getCPtr(pos), pos, FMOD_VECTOR.getCPtr(vel), vel));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Get3DAttributes(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, FMOD_VECTOR pos, FMOD_VECTOR vel) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Get3DAttributes(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), FMOD_VECTOR.getCPtr(pos), pos, FMOD_VECTOR.getCPtr(vel), vel));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Set3DMinMaxDistance(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float mindistance, float maxdistance) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Set3DMinMaxDistance(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), mindistance, maxdistance));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Get3DMinMaxDistance(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] mindistance, float[] maxdistance) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Get3DMinMaxDistance(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), mindistance, maxdistance));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Set3DConeSettings(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float insideconeangle, float outsideconeangle, float outsidevolume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Set3DConeSettings(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), insideconeangle, outsideconeangle, outsidevolume));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Get3DConeSettings(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] insideconeangle, float[] outsideconeangle, float[] outsidevolume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Get3DConeSettings(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), insideconeangle, outsideconeangle, outsidevolume));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Set3DConeOrientation(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, FMOD_VECTOR orientation) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Set3DConeOrientation(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), FMOD_VECTOR.getCPtr(orientation), orientation));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Get3DConeOrientation(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, FMOD_VECTOR orientation) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Get3DConeOrientation(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), FMOD_VECTOR.getCPtr(orientation), orientation));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Set3DCustomRolloff(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, FMOD_VECTOR points, int numpoints) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Set3DCustomRolloff(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), FMOD_VECTOR.getCPtr(points), points, numpoints));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Get3DCustomRolloff(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_p_FMOD_VECTOR points, int[] numpoints) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Get3DCustomRolloff(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_p_FMOD_VECTOR.getCPtr(points), numpoints));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Set3DOcclusion(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float directocclusion, float reverbocclusion) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Set3DOcclusion(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), directocclusion, reverbocclusion));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Get3DOcclusion(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] directocclusion, float[] reverbocclusion) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Get3DOcclusion(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), directocclusion, reverbocclusion));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Set3DSpread(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float angle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Set3DSpread(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), angle));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Get3DSpread(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] angle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Get3DSpread(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), angle));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Set3DLevel(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float level) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Set3DLevel(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), level));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Get3DLevel(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] level) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Get3DLevel(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), level));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Set3DDopplerLevel(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float level) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Set3DDopplerLevel(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), level));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Get3DDopplerLevel(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, float[] level) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Get3DDopplerLevel(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), level));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Set3DDistanceFilter(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int custom, float customLevel, float centerFreq) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Set3DDistanceFilter(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), custom, customLevel, centerFreq));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Get3DDistanceFilter(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int[] custom, float[] customLevel, float[] centerFreq) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Get3DDistanceFilter(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), custom, customLevel, centerFreq));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_SetUserData(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_SetUserData(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetUserData(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetUserData(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_Release(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_Release(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_AddGroup(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_FMOD_CHANNELGROUP group, int propagatedspclock, SWIGTYPE_p_p_FMOD_DSPCONNECTION connection) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_AddGroup(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(group), propagatedspclock, SWIGTYPE_p_p_FMOD_DSPCONNECTION.getCPtr(connection)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetNumGroups(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int[] numgroups) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetNumGroups(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), numgroups));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetGroup(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int index, SWIGTYPE_p_p_FMOD_CHANNELGROUP group) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetGroup(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), index, SWIGTYPE_p_p_FMOD_CHANNELGROUP.getCPtr(group)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetParentGroup(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, SWIGTYPE_p_p_FMOD_CHANNELGROUP group) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetParentGroup(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), SWIGTYPE_p_p_FMOD_CHANNELGROUP.getCPtr(group)));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetName(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, String name, int namelen) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetName(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), name, namelen));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetNumChannels(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int[] numchannels) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetNumChannels(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), numchannels));
  }

  public static FMOD_RESULT FMOD_ChannelGroup_GetChannel(SWIGTYPE_p_FMOD_CHANNELGROUP channelgroup, int index, SWIGTYPE_p_p_FMOD_CHANNEL channel) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_ChannelGroup_GetChannel(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(channelgroup), index, SWIGTYPE_p_p_FMOD_CHANNEL.getCPtr(channel)));
  }

  public static FMOD_RESULT FMOD_SoundGroup_Release(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_Release(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup)));
  }

  public static FMOD_RESULT FMOD_SoundGroup_GetSystemObject(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, SWIGTYPE_p_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_GetSystemObject(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), SWIGTYPE_p_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_SoundGroup_SetMaxAudible(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, int maxaudible) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_SetMaxAudible(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), maxaudible));
  }

  public static FMOD_RESULT FMOD_SoundGroup_GetMaxAudible(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, int[] maxaudible) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_GetMaxAudible(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), maxaudible));
  }

  public static FMOD_RESULT FMOD_SoundGroup_SetMaxAudibleBehavior(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, FMOD_SOUNDGROUP_BEHAVIOR behavior) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_SetMaxAudibleBehavior(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), behavior.swigValue()));
  }

  public static FMOD_RESULT FMOD_SoundGroup_GetMaxAudibleBehavior(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, SWIGTYPE_p_FMOD_SOUNDGROUP_BEHAVIOR behavior) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_GetMaxAudibleBehavior(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), SWIGTYPE_p_FMOD_SOUNDGROUP_BEHAVIOR.getCPtr(behavior)));
  }

  public static FMOD_RESULT FMOD_SoundGroup_SetMuteFadeSpeed(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, float speed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_SetMuteFadeSpeed(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), speed));
  }

  public static FMOD_RESULT FMOD_SoundGroup_GetMuteFadeSpeed(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, float[] speed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_GetMuteFadeSpeed(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), speed));
  }

  public static FMOD_RESULT FMOD_SoundGroup_SetVolume(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_SetVolume(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), volume));
  }

  public static FMOD_RESULT FMOD_SoundGroup_GetVolume(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, float[] volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_GetVolume(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), volume));
  }

  public static FMOD_RESULT FMOD_SoundGroup_Stop(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_Stop(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup)));
  }

  public static FMOD_RESULT FMOD_SoundGroup_GetName(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, String name, int namelen) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_GetName(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), name, namelen));
  }

  public static FMOD_RESULT FMOD_SoundGroup_GetNumSounds(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, int[] numsounds) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_GetNumSounds(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), numsounds));
  }

  public static FMOD_RESULT FMOD_SoundGroup_GetSound(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, int index, SWIGTYPE_p_p_FMOD_SOUND sound) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_GetSound(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), index, SWIGTYPE_p_p_FMOD_SOUND.getCPtr(sound)));
  }

  public static FMOD_RESULT FMOD_SoundGroup_GetNumPlaying(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, int[] numplaying) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_GetNumPlaying(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), numplaying));
  }

  public static FMOD_RESULT FMOD_SoundGroup_SetUserData(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_SetUserData(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_SoundGroup_GetUserData(SWIGTYPE_p_FMOD_SOUNDGROUP soundgroup, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_SoundGroup_GetUserData(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(soundgroup), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_DSP_Release(SWIGTYPE_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_Release(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_DSP_GetSystemObject(SWIGTYPE_p_FMOD_DSP dsp, SWIGTYPE_p_p_FMOD_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetSystemObject(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), SWIGTYPE_p_p_FMOD_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_DSP_AddInput(SWIGTYPE_p_FMOD_DSP dsp, SWIGTYPE_p_FMOD_DSP input, SWIGTYPE_p_p_FMOD_DSPCONNECTION connection, FMOD_DSPCONNECTION_TYPE type) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_AddInput(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), SWIGTYPE_p_FMOD_DSP.getCPtr(input), SWIGTYPE_p_p_FMOD_DSPCONNECTION.getCPtr(connection), type.swigValue()));
  }

  public static FMOD_RESULT FMOD_DSP_DisconnectFrom(SWIGTYPE_p_FMOD_DSP dsp, SWIGTYPE_p_FMOD_DSP target, SWIGTYPE_p_FMOD_DSPCONNECTION connection) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_DisconnectFrom(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), SWIGTYPE_p_FMOD_DSP.getCPtr(target), SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(connection)));
  }

  public static FMOD_RESULT FMOD_DSP_DisconnectAll(SWIGTYPE_p_FMOD_DSP dsp, int inputs, int outputs) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_DisconnectAll(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), inputs, outputs));
  }

  public static FMOD_RESULT FMOD_DSP_GetNumInputs(SWIGTYPE_p_FMOD_DSP dsp, int[] numinputs) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetNumInputs(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), numinputs));
  }

  public static FMOD_RESULT FMOD_DSP_GetNumOutputs(SWIGTYPE_p_FMOD_DSP dsp, int[] numoutputs) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetNumOutputs(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), numoutputs));
  }

  public static FMOD_RESULT FMOD_DSP_GetInput(SWIGTYPE_p_FMOD_DSP dsp, int index, SWIGTYPE_p_p_FMOD_DSP input, SWIGTYPE_p_p_FMOD_DSPCONNECTION inputconnection) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetInput(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, SWIGTYPE_p_p_FMOD_DSP.getCPtr(input), SWIGTYPE_p_p_FMOD_DSPCONNECTION.getCPtr(inputconnection)));
  }

  public static FMOD_RESULT FMOD_DSP_GetOutput(SWIGTYPE_p_FMOD_DSP dsp, int index, SWIGTYPE_p_p_FMOD_DSP output, SWIGTYPE_p_p_FMOD_DSPCONNECTION outputconnection) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetOutput(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, SWIGTYPE_p_p_FMOD_DSP.getCPtr(output), SWIGTYPE_p_p_FMOD_DSPCONNECTION.getCPtr(outputconnection)));
  }

  public static FMOD_RESULT FMOD_DSP_SetActive(SWIGTYPE_p_FMOD_DSP dsp, int active) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_SetActive(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), active));
  }

  public static FMOD_RESULT FMOD_DSP_GetActive(SWIGTYPE_p_FMOD_DSP dsp, int[] active) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetActive(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), active));
  }

  public static FMOD_RESULT FMOD_DSP_SetBypass(SWIGTYPE_p_FMOD_DSP dsp, int bypass) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_SetBypass(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), bypass));
  }

  public static FMOD_RESULT FMOD_DSP_GetBypass(SWIGTYPE_p_FMOD_DSP dsp, int[] bypass) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetBypass(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), bypass));
  }

  public static FMOD_RESULT FMOD_DSP_SetWetDryMix(SWIGTYPE_p_FMOD_DSP dsp, float prewet, float postwet, float dry) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_SetWetDryMix(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), prewet, postwet, dry));
  }

  public static FMOD_RESULT FMOD_DSP_GetWetDryMix(SWIGTYPE_p_FMOD_DSP dsp, float[] prewet, float[] postwet, float[] dry) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetWetDryMix(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), prewet, postwet, dry));
  }

  public static FMOD_RESULT FMOD_DSP_SetChannelFormat(SWIGTYPE_p_FMOD_DSP dsp, long channelmask, int numchannels, FMOD_SPEAKERMODE source_speakermode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_SetChannelFormat(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), channelmask, numchannels, source_speakermode.swigValue()));
  }

  public static FMOD_RESULT FMOD_DSP_GetChannelFormat(SWIGTYPE_p_FMOD_DSP dsp, long[] channelmask, int[] numchannels, SWIGTYPE_p_FMOD_SPEAKERMODE source_speakermode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetChannelFormat(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), channelmask, numchannels, SWIGTYPE_p_FMOD_SPEAKERMODE.getCPtr(source_speakermode)));
  }

  public static FMOD_RESULT FMOD_DSP_GetOutputChannelFormat(SWIGTYPE_p_FMOD_DSP dsp, long inmask, int inchannels, FMOD_SPEAKERMODE inspeakermode, long[] outmask, int[] outchannels, SWIGTYPE_p_FMOD_SPEAKERMODE outspeakermode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetOutputChannelFormat(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), inmask, inchannels, inspeakermode.swigValue(), outmask, outchannels, SWIGTYPE_p_FMOD_SPEAKERMODE.getCPtr(outspeakermode)));
  }

  public static FMOD_RESULT FMOD_DSP_Reset(SWIGTYPE_p_FMOD_DSP dsp) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_Reset(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp)));
  }

  public static FMOD_RESULT FMOD_DSP_SetParameterFloat(SWIGTYPE_p_FMOD_DSP dsp, int index, float value) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_SetParameterFloat(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, value));
  }

  public static FMOD_RESULT FMOD_DSP_SetParameterInt(SWIGTYPE_p_FMOD_DSP dsp, int index, int value) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_SetParameterInt(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, value));
  }

  public static FMOD_RESULT FMOD_DSP_SetParameterBool(SWIGTYPE_p_FMOD_DSP dsp, int index, int value) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_SetParameterBool(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, value));
  }

  public static FMOD_RESULT FMOD_DSP_SetParameterData(SWIGTYPE_p_FMOD_DSP dsp, int index, SWIGTYPE_p_void data, long length) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_SetParameterData(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, SWIGTYPE_p_void.getCPtr(data), length));
  }

  public static FMOD_RESULT FMOD_DSP_GetParameterFloat(SWIGTYPE_p_FMOD_DSP dsp, int index, float[] value, String valuestr, int valuestrlen) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetParameterFloat(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, value, valuestr, valuestrlen));
  }

  public static FMOD_RESULT FMOD_DSP_GetParameterInt(SWIGTYPE_p_FMOD_DSP dsp, int index, int[] value, String valuestr, int valuestrlen) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetParameterInt(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, value, valuestr, valuestrlen));
  }

  public static FMOD_RESULT FMOD_DSP_GetParameterBool(SWIGTYPE_p_FMOD_DSP dsp, int index, int[] value, String valuestr, int valuestrlen) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetParameterBool(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, value, valuestr, valuestrlen));
  }

  public static FMOD_RESULT FMOD_DSP_GetParameterData(SWIGTYPE_p_FMOD_DSP dsp, int index, SWIGTYPE_p_p_void data, long[] length, String valuestr, int valuestrlen) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetParameterData(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, SWIGTYPE_p_p_void.getCPtr(data), length, valuestr, valuestrlen));
  }

  public static FMOD_RESULT FMOD_DSP_GetNumParameters(SWIGTYPE_p_FMOD_DSP dsp, int[] numparams) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetNumParameters(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), numparams));
  }

  public static FMOD_RESULT FMOD_DSP_GetParameterInfo(SWIGTYPE_p_FMOD_DSP dsp, int index, SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC desc) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetParameterInfo(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), index, SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC.getCPtr(desc)));
  }

  public static FMOD_RESULT FMOD_DSP_GetDataParameterIndex(SWIGTYPE_p_FMOD_DSP dsp, int datatype, int[] index) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetDataParameterIndex(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), datatype, index));
  }

  public static FMOD_RESULT FMOD_DSP_ShowConfigDialog(SWIGTYPE_p_FMOD_DSP dsp, SWIGTYPE_p_void hwnd, int show) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_ShowConfigDialog(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), SWIGTYPE_p_void.getCPtr(hwnd), show));
  }

  public static FMOD_RESULT FMOD_DSP_GetInfo(SWIGTYPE_p_FMOD_DSP dsp, String name, long[] version, int[] channels, int[] configwidth, int[] configheight) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetInfo(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), name, version, channels, configwidth, configheight));
  }

  public static FMOD_RESULT FMOD_DSP_GetType(SWIGTYPE_p_FMOD_DSP dsp, SWIGTYPE_p_FMOD_DSP_TYPE type) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetType(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), SWIGTYPE_p_FMOD_DSP_TYPE.getCPtr(type)));
  }

  public static FMOD_RESULT FMOD_DSP_GetIdle(SWIGTYPE_p_FMOD_DSP dsp, int[] idle) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetIdle(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), idle));
  }

  public static FMOD_RESULT FMOD_DSP_SetUserData(SWIGTYPE_p_FMOD_DSP dsp, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_SetUserData(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_DSP_GetUserData(SWIGTYPE_p_FMOD_DSP dsp, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetUserData(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_DSP_SetMeteringEnabled(SWIGTYPE_p_FMOD_DSP dsp, int inputEnabled, int outputEnabled) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_SetMeteringEnabled(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), inputEnabled, outputEnabled));
  }

  public static FMOD_RESULT FMOD_DSP_GetMeteringEnabled(SWIGTYPE_p_FMOD_DSP dsp, int[] inputEnabled, int[] outputEnabled) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetMeteringEnabled(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), inputEnabled, outputEnabled));
  }

  public static FMOD_RESULT FMOD_DSP_GetMeteringInfo(SWIGTYPE_p_FMOD_DSP dsp, SWIGTYPE_p_FMOD_DSP_METERING_INFO inputInfo, SWIGTYPE_p_FMOD_DSP_METERING_INFO outputInfo) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetMeteringInfo(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), SWIGTYPE_p_FMOD_DSP_METERING_INFO.getCPtr(inputInfo), SWIGTYPE_p_FMOD_DSP_METERING_INFO.getCPtr(outputInfo)));
  }

  public static FMOD_RESULT FMOD_DSP_GetCPUUsage(SWIGTYPE_p_FMOD_DSP dsp, long[] exclusive, long[] inclusive) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSP_GetCPUUsage(SWIGTYPE_p_FMOD_DSP.getCPtr(dsp), exclusive, inclusive));
  }

  public static FMOD_RESULT FMOD_DSPConnection_GetInput(SWIGTYPE_p_FMOD_DSPCONNECTION dspconnection, SWIGTYPE_p_p_FMOD_DSP input) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSPConnection_GetInput(SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(dspconnection), SWIGTYPE_p_p_FMOD_DSP.getCPtr(input)));
  }

  public static FMOD_RESULT FMOD_DSPConnection_GetOutput(SWIGTYPE_p_FMOD_DSPCONNECTION dspconnection, SWIGTYPE_p_p_FMOD_DSP output) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSPConnection_GetOutput(SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(dspconnection), SWIGTYPE_p_p_FMOD_DSP.getCPtr(output)));
  }

  public static FMOD_RESULT FMOD_DSPConnection_SetMix(SWIGTYPE_p_FMOD_DSPCONNECTION dspconnection, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSPConnection_SetMix(SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(dspconnection), volume));
  }

  public static FMOD_RESULT FMOD_DSPConnection_GetMix(SWIGTYPE_p_FMOD_DSPCONNECTION dspconnection, float[] volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSPConnection_GetMix(SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(dspconnection), volume));
  }

  public static FMOD_RESULT FMOD_DSPConnection_SetMixMatrix(SWIGTYPE_p_FMOD_DSPCONNECTION dspconnection, float[] matrix, int outchannels, int inchannels, int inchannel_hop) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSPConnection_SetMixMatrix(SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(dspconnection), matrix, outchannels, inchannels, inchannel_hop));
  }

  public static FMOD_RESULT FMOD_DSPConnection_GetMixMatrix(SWIGTYPE_p_FMOD_DSPCONNECTION dspconnection, float[] matrix, int[] outchannels, int[] inchannels, int inchannel_hop) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSPConnection_GetMixMatrix(SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(dspconnection), matrix, outchannels, inchannels, inchannel_hop));
  }

  public static FMOD_RESULT FMOD_DSPConnection_GetType(SWIGTYPE_p_FMOD_DSPCONNECTION dspconnection, SWIGTYPE_p_FMOD_DSPCONNECTION_TYPE type) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSPConnection_GetType(SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(dspconnection), SWIGTYPE_p_FMOD_DSPCONNECTION_TYPE.getCPtr(type)));
  }

  public static FMOD_RESULT FMOD_DSPConnection_SetUserData(SWIGTYPE_p_FMOD_DSPCONNECTION dspconnection, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSPConnection_SetUserData(SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(dspconnection), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_DSPConnection_GetUserData(SWIGTYPE_p_FMOD_DSPCONNECTION dspconnection, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_DSPConnection_GetUserData(SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(dspconnection), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Geometry_Release(SWIGTYPE_p_FMOD_GEOMETRY geometry) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_Release(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry)));
  }

  public static FMOD_RESULT FMOD_Geometry_AddPolygon(SWIGTYPE_p_FMOD_GEOMETRY geometry, float directocclusion, float reverbocclusion, int doublesided, int numvertices, FMOD_VECTOR vertices, int[] polygonindex) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_AddPolygon(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), directocclusion, reverbocclusion, doublesided, numvertices, FMOD_VECTOR.getCPtr(vertices), vertices, polygonindex));
  }

  public static FMOD_RESULT FMOD_Geometry_GetNumPolygons(SWIGTYPE_p_FMOD_GEOMETRY geometry, int[] numpolygons) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_GetNumPolygons(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), numpolygons));
  }

  public static FMOD_RESULT FMOD_Geometry_GetMaxPolygons(SWIGTYPE_p_FMOD_GEOMETRY geometry, int[] maxpolygons, int[] maxvertices) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_GetMaxPolygons(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), maxpolygons, maxvertices));
  }

  public static FMOD_RESULT FMOD_Geometry_GetPolygonNumVertices(SWIGTYPE_p_FMOD_GEOMETRY geometry, int index, int[] numvertices) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_GetPolygonNumVertices(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), index, numvertices));
  }

  public static FMOD_RESULT FMOD_Geometry_SetPolygonVertex(SWIGTYPE_p_FMOD_GEOMETRY geometry, int index, int vertexindex, FMOD_VECTOR vertex) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_SetPolygonVertex(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), index, vertexindex, FMOD_VECTOR.getCPtr(vertex), vertex));
  }

  public static FMOD_RESULT FMOD_Geometry_GetPolygonVertex(SWIGTYPE_p_FMOD_GEOMETRY geometry, int index, int vertexindex, FMOD_VECTOR vertex) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_GetPolygonVertex(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), index, vertexindex, FMOD_VECTOR.getCPtr(vertex), vertex));
  }

  public static FMOD_RESULT FMOD_Geometry_SetPolygonAttributes(SWIGTYPE_p_FMOD_GEOMETRY geometry, int index, float directocclusion, float reverbocclusion, int doublesided) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_SetPolygonAttributes(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), index, directocclusion, reverbocclusion, doublesided));
  }

  public static FMOD_RESULT FMOD_Geometry_GetPolygonAttributes(SWIGTYPE_p_FMOD_GEOMETRY geometry, int index, float[] directocclusion, float[] reverbocclusion, int[] doublesided) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_GetPolygonAttributes(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), index, directocclusion, reverbocclusion, doublesided));
  }

  public static FMOD_RESULT FMOD_Geometry_SetActive(SWIGTYPE_p_FMOD_GEOMETRY geometry, int active) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_SetActive(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), active));
  }

  public static FMOD_RESULT FMOD_Geometry_GetActive(SWIGTYPE_p_FMOD_GEOMETRY geometry, int[] active) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_GetActive(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), active));
  }

  public static FMOD_RESULT FMOD_Geometry_SetRotation(SWIGTYPE_p_FMOD_GEOMETRY geometry, FMOD_VECTOR forward, FMOD_VECTOR up) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_SetRotation(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), FMOD_VECTOR.getCPtr(forward), forward, FMOD_VECTOR.getCPtr(up), up));
  }

  public static FMOD_RESULT FMOD_Geometry_GetRotation(SWIGTYPE_p_FMOD_GEOMETRY geometry, FMOD_VECTOR forward, FMOD_VECTOR up) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_GetRotation(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), FMOD_VECTOR.getCPtr(forward), forward, FMOD_VECTOR.getCPtr(up), up));
  }

  public static FMOD_RESULT FMOD_Geometry_SetPosition(SWIGTYPE_p_FMOD_GEOMETRY geometry, FMOD_VECTOR position) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_SetPosition(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), FMOD_VECTOR.getCPtr(position), position));
  }

  public static FMOD_RESULT FMOD_Geometry_GetPosition(SWIGTYPE_p_FMOD_GEOMETRY geometry, FMOD_VECTOR position) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_GetPosition(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), FMOD_VECTOR.getCPtr(position), position));
  }

  public static FMOD_RESULT FMOD_Geometry_SetScale(SWIGTYPE_p_FMOD_GEOMETRY geometry, FMOD_VECTOR scale) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_SetScale(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), FMOD_VECTOR.getCPtr(scale), scale));
  }

  public static FMOD_RESULT FMOD_Geometry_GetScale(SWIGTYPE_p_FMOD_GEOMETRY geometry, FMOD_VECTOR scale) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_GetScale(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), FMOD_VECTOR.getCPtr(scale), scale));
  }

  public static FMOD_RESULT FMOD_Geometry_Save(SWIGTYPE_p_FMOD_GEOMETRY geometry, SWIGTYPE_p_void data, int[] datasize) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_Save(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), SWIGTYPE_p_void.getCPtr(data), datasize));
  }

  public static FMOD_RESULT FMOD_Geometry_SetUserData(SWIGTYPE_p_FMOD_GEOMETRY geometry, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_SetUserData(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Geometry_GetUserData(SWIGTYPE_p_FMOD_GEOMETRY geometry, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Geometry_GetUserData(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(geometry), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Reverb3D_Release(SWIGTYPE_p_FMOD_REVERB3D reverb3d) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Reverb3D_Release(SWIGTYPE_p_FMOD_REVERB3D.getCPtr(reverb3d)));
  }

  public static FMOD_RESULT FMOD_Reverb3D_Set3DAttributes(SWIGTYPE_p_FMOD_REVERB3D reverb3d, FMOD_VECTOR position, float mindistance, float maxdistance) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Reverb3D_Set3DAttributes(SWIGTYPE_p_FMOD_REVERB3D.getCPtr(reverb3d), FMOD_VECTOR.getCPtr(position), position, mindistance, maxdistance));
  }

  public static FMOD_RESULT FMOD_Reverb3D_Get3DAttributes(SWIGTYPE_p_FMOD_REVERB3D reverb3d, FMOD_VECTOR position, float[] mindistance, float[] maxdistance) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Reverb3D_Get3DAttributes(SWIGTYPE_p_FMOD_REVERB3D.getCPtr(reverb3d), FMOD_VECTOR.getCPtr(position), position, mindistance, maxdistance));
  }

  public static FMOD_RESULT FMOD_Reverb3D_SetProperties(SWIGTYPE_p_FMOD_REVERB3D reverb3d, FMOD_REVERB_PROPERTIES properties) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Reverb3D_SetProperties(SWIGTYPE_p_FMOD_REVERB3D.getCPtr(reverb3d), FMOD_REVERB_PROPERTIES.getCPtr(properties), properties));
  }

  public static FMOD_RESULT FMOD_Reverb3D_GetProperties(SWIGTYPE_p_FMOD_REVERB3D reverb3d, FMOD_REVERB_PROPERTIES properties) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Reverb3D_GetProperties(SWIGTYPE_p_FMOD_REVERB3D.getCPtr(reverb3d), FMOD_REVERB_PROPERTIES.getCPtr(properties), properties));
  }

  public static FMOD_RESULT FMOD_Reverb3D_SetActive(SWIGTYPE_p_FMOD_REVERB3D reverb3d, int active) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Reverb3D_SetActive(SWIGTYPE_p_FMOD_REVERB3D.getCPtr(reverb3d), active));
  }

  public static FMOD_RESULT FMOD_Reverb3D_GetActive(SWIGTYPE_p_FMOD_REVERB3D reverb3d, int[] active) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Reverb3D_GetActive(SWIGTYPE_p_FMOD_REVERB3D.getCPtr(reverb3d), active));
  }

  public static FMOD_RESULT FMOD_Reverb3D_SetUserData(SWIGTYPE_p_FMOD_REVERB3D reverb3d, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Reverb3D_SetUserData(SWIGTYPE_p_FMOD_REVERB3D.getCPtr(reverb3d), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Reverb3D_GetUserData(SWIGTYPE_p_FMOD_REVERB3D reverb3d, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Reverb3D_GetUserData(SWIGTYPE_p_FMOD_REVERB3D.getCPtr(reverb3d), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Studio_ParseID(String idstring, FMOD_GUID id) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_ParseID(idstring, FMOD_GUID.getCPtr(id), id));
  }

  public static FMOD_RESULT FMOD_Studio_System_Create(SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM system, long headerversion) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_Create(SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM.getCPtr(system), headerversion));
  }

  public static int FMOD_Studio_System_IsValid(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system) {
    return FMODJNI.FMOD_Studio_System_IsValid(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetAdvancedSettings(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_ADVANCEDSETTINGS settings) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetAdvancedSettings(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_ADVANCEDSETTINGS.getCPtr(settings), settings));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetAdvancedSettings(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_ADVANCEDSETTINGS settings) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetAdvancedSettings(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_ADVANCEDSETTINGS.getCPtr(settings), settings));
  }

  public static FMOD_RESULT FMOD_Studio_System_Initialize(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, int maxchannels, long studioflags, long flags, SWIGTYPE_p_void extradriverdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_Initialize(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), maxchannels, studioflags, flags, SWIGTYPE_p_void.getCPtr(extradriverdata)));
  }

  public static FMOD_RESULT FMOD_Studio_System_Release(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_Release(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_Studio_System_Update(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_Update(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetCoreSystem(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, SWIGTYPE_p_p_FMOD_SYSTEM coresystem) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetCoreSystem(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), SWIGTYPE_p_p_FMOD_SYSTEM.getCPtr(coresystem)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetEvent(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String pathOrID, SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION event) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetEvent(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), pathOrID, SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(event)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetBus(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String pathOrID, SWIGTYPE_p_p_FMOD_STUDIO_BUS bus) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetBus(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), pathOrID, SWIGTYPE_p_p_FMOD_STUDIO_BUS.getCPtr(bus)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetVCA(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String pathOrID, SWIGTYPE_p_p_FMOD_STUDIO_VCA vca) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetVCA(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), pathOrID, SWIGTYPE_p_p_FMOD_STUDIO_VCA.getCPtr(vca)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetBank(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String pathOrID, SWIGTYPE_p_p_FMOD_STUDIO_BANK bank) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetBank(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), pathOrID, SWIGTYPE_p_p_FMOD_STUDIO_BANK.getCPtr(bank)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetEventByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_GUID id, SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION event) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetEventByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_GUID.getCPtr(id), id, SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(event)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetBusByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_GUID id, SWIGTYPE_p_p_FMOD_STUDIO_BUS bus) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetBusByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_GUID.getCPtr(id), id, SWIGTYPE_p_p_FMOD_STUDIO_BUS.getCPtr(bus)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetVCAByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_GUID id, SWIGTYPE_p_p_FMOD_STUDIO_VCA vca) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetVCAByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_GUID.getCPtr(id), id, SWIGTYPE_p_p_FMOD_STUDIO_VCA.getCPtr(vca)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetBankByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_GUID id, SWIGTYPE_p_p_FMOD_STUDIO_BANK bank) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetBankByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_GUID.getCPtr(id), id, SWIGTYPE_p_p_FMOD_STUDIO_BANK.getCPtr(bank)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetSoundInfo(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String key, FMOD_STUDIO_SOUND_INFO info) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetSoundInfo(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), key, FMOD_STUDIO_SOUND_INFO.getCPtr(info), info));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetParameterDescriptionByName(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String name, FMOD_STUDIO_PARAMETER_DESCRIPTION parameter) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetParameterDescriptionByName(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), name, FMOD_STUDIO_PARAMETER_DESCRIPTION.getCPtr(parameter), parameter));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetParameterDescriptionByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_PARAMETER_ID id, FMOD_STUDIO_PARAMETER_DESCRIPTION parameter) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetParameterDescriptionByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_PARAMETER_ID.getCPtr(id), id, FMOD_STUDIO_PARAMETER_DESCRIPTION.getCPtr(parameter), parameter));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetParameterLabelByName(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String name, int labelindex, String label, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetParameterLabelByName(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), name, labelindex, label, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetParameterLabelByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_PARAMETER_ID id, int labelindex, String label, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetParameterLabelByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_PARAMETER_ID.getCPtr(id), id, labelindex, label, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetParameterByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_PARAMETER_ID id, float[] value, float[] finalvalue) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetParameterByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_PARAMETER_ID.getCPtr(id), id, value, finalvalue));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetParameterByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_PARAMETER_ID id, float value, int ignoreseekspeed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetParameterByID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_PARAMETER_ID.getCPtr(id), id, value, ignoreseekspeed));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetParameterByIDWithLabel(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_PARAMETER_ID id, String label, int ignoreseekspeed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetParameterByIDWithLabel(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_PARAMETER_ID.getCPtr(id), id, label, ignoreseekspeed));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetParametersByIDs(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_PARAMETER_ID ids, float[] values, int count, int ignoreseekspeed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetParametersByIDs(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_PARAMETER_ID.getCPtr(ids), ids, values, count, ignoreseekspeed));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetParameterByName(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String name, float[] value, float[] finalvalue) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetParameterByName(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), name, value, finalvalue));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetParameterByName(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String name, float value, int ignoreseekspeed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetParameterByName(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), name, value, ignoreseekspeed));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetParameterByNameWithLabel(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String name, String label, int ignoreseekspeed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetParameterByNameWithLabel(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), name, label, ignoreseekspeed));
  }

  public static FMOD_RESULT FMOD_Studio_System_LookupID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, byte[] path, FMOD_GUID id) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_LookupID(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), path, FMOD_GUID.getCPtr(id), id));
  }

  public static FMOD_RESULT FMOD_Studio_System_LookupPath(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_GUID id, byte[] path, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_LookupPath(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_GUID.getCPtr(id), id, path, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetNumListeners(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, int[] numlisteners) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetNumListeners(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), numlisteners));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetNumListeners(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, int numlisteners) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetNumListeners(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), numlisteners));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetListenerAttributes(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, int index, FMOD_3D_ATTRIBUTES attributes, FMOD_VECTOR attenuationposition) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetListenerAttributes(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), index, FMOD_3D_ATTRIBUTES.getCPtr(attributes), attributes, FMOD_VECTOR.getCPtr(attenuationposition), attenuationposition));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetListenerAttributes(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, int index, FMOD_3D_ATTRIBUTES attributes, FMOD_VECTOR attenuationposition) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetListenerAttributes(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), index, FMOD_3D_ATTRIBUTES.getCPtr(attributes), attributes, FMOD_VECTOR.getCPtr(attenuationposition), attenuationposition));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetListenerWeight(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, int index, float[] weight) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetListenerWeight(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), index, weight));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetListenerWeight(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, int index, float weight) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetListenerWeight(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), index, weight));
  }

  public static FMOD_RESULT FMOD_Studio_System_LoadBankFile(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String filename, long flags, SWIGTYPE_p_p_FMOD_STUDIO_BANK bank) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_LoadBankFile(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), filename, flags, SWIGTYPE_p_p_FMOD_STUDIO_BANK.getCPtr(bank)));
  }

  public static FMOD_RESULT FMOD_Studio_System_LoadBankMemory(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String buffer, int length, FMOD_STUDIO_LOAD_MEMORY_MODE mode, long flags, SWIGTYPE_p_p_FMOD_STUDIO_BANK bank) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_LoadBankMemory(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), buffer, length, mode.swigValue(), flags, SWIGTYPE_p_p_FMOD_STUDIO_BANK.getCPtr(bank)));
  }

  public static FMOD_RESULT FMOD_Studio_System_LoadBankCustom(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_BANK_INFO info, long flags, SWIGTYPE_p_p_FMOD_STUDIO_BANK bank) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_LoadBankCustom(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_BANK_INFO.getCPtr(info), info, flags, SWIGTYPE_p_p_FMOD_STUDIO_BANK.getCPtr(bank)));
  }

  public static FMOD_RESULT FMOD_Studio_System_RegisterPlugin(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, SWIGTYPE_p_FMOD_DSP_DESCRIPTION description) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_RegisterPlugin(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), SWIGTYPE_p_FMOD_DSP_DESCRIPTION.getCPtr(description)));
  }

  public static FMOD_RESULT FMOD_Studio_System_UnregisterPlugin(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String name) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_UnregisterPlugin(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), name));
  }

  public static FMOD_RESULT FMOD_Studio_System_UnloadAll(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_UnloadAll(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_Studio_System_FlushCommands(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_FlushCommands(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_Studio_System_FlushSampleLoading(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_FlushSampleLoading(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_Studio_System_StartCommandCapture(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String filename, long flags) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_StartCommandCapture(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), filename, flags));
  }

  public static FMOD_RESULT FMOD_Studio_System_StopCommandCapture(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_StopCommandCapture(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_Studio_System_LoadCommandReplay(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, String filename, long flags, SWIGTYPE_p_p_FMOD_STUDIO_COMMANDREPLAY replay) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_LoadCommandReplay(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), filename, flags, SWIGTYPE_p_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetBankCount(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetBankCount(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), count));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetBankList(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, SWIGTYPE_p_p_FMOD_STUDIO_BANK array, int capacity, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetBankList(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), SWIGTYPE_p_p_FMOD_STUDIO_BANK.getCPtr(array), capacity, count));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetParameterDescriptionCount(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetParameterDescriptionCount(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), count));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetParameterDescriptionList(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_PARAMETER_DESCRIPTION array, int capacity, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetParameterDescriptionList(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_PARAMETER_DESCRIPTION.getCPtr(array), array, capacity, count));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetCPUUsage(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_CPU_USAGE usage, FMOD_CPU_USAGE usage_core) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetCPUUsage(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_CPU_USAGE.getCPtr(usage), usage, FMOD_CPU_USAGE.getCPtr(usage_core), usage_core));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetBufferUsage(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_BUFFER_USAGE usage) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetBufferUsage(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_BUFFER_USAGE.getCPtr(usage), usage));
  }

  public static FMOD_RESULT FMOD_Studio_System_ResetBufferUsage(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_ResetBufferUsage(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetCallback(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, SWIGTYPE_p_f_p_struct_FMOD_STUDIO_SYSTEM_unsigned_int_p_void_p_void__FMOD_RESULT callback, long callbackmask) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetCallback(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), SWIGTYPE_p_f_p_struct_FMOD_STUDIO_SYSTEM_unsigned_int_p_void_p_void__FMOD_RESULT.getCPtr(callback), callbackmask));
  }

  public static FMOD_RESULT FMOD_Studio_System_SetUserData(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_SetUserData(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetUserData(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetUserData(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Studio_System_GetMemoryUsage(SWIGTYPE_p_FMOD_STUDIO_SYSTEM system, FMOD_STUDIO_MEMORY_USAGE memoryusage) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_System_GetMemoryUsage(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(system), FMOD_STUDIO_MEMORY_USAGE.getCPtr(memoryusage), memoryusage));
  }

  public static int FMOD_Studio_EventDescription_IsValid(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription) {
    return FMODJNI.FMOD_Studio_EventDescription_IsValid(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetID(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, FMOD_GUID id) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetID(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), FMOD_GUID.getCPtr(id), id));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetPath(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, byte[] path, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetPath(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), path, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetParameterDescriptionCount(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetParameterDescriptionCount(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), count));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetParameterDescriptionByIndex(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int index, FMOD_STUDIO_PARAMETER_DESCRIPTION parameter) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetParameterDescriptionByIndex(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), index, FMOD_STUDIO_PARAMETER_DESCRIPTION.getCPtr(parameter), parameter));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetParameterDescriptionByName(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, String name, FMOD_STUDIO_PARAMETER_DESCRIPTION parameter) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetParameterDescriptionByName(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), name, FMOD_STUDIO_PARAMETER_DESCRIPTION.getCPtr(parameter), parameter));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetParameterDescriptionByID(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, FMOD_STUDIO_PARAMETER_ID id, FMOD_STUDIO_PARAMETER_DESCRIPTION parameter) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetParameterDescriptionByID(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), FMOD_STUDIO_PARAMETER_ID.getCPtr(id), id, FMOD_STUDIO_PARAMETER_DESCRIPTION.getCPtr(parameter), parameter));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetParameterLabelByIndex(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int index, int labelindex, String label, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetParameterLabelByIndex(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), index, labelindex, label, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetParameterLabelByName(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, String name, int labelindex, String label, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetParameterLabelByName(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), name, labelindex, label, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetParameterLabelByID(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, FMOD_STUDIO_PARAMETER_ID id, int labelindex, String label, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetParameterLabelByID(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), FMOD_STUDIO_PARAMETER_ID.getCPtr(id), id, labelindex, label, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetUserPropertyCount(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetUserPropertyCount(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), count));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetUserPropertyByIndex(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int index, FMOD_STUDIO_USER_PROPERTY property) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetUserPropertyByIndex(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), index, FMOD_STUDIO_USER_PROPERTY.getCPtr(property), property));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetUserProperty(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, String name, FMOD_STUDIO_USER_PROPERTY property) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetUserProperty(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), name, FMOD_STUDIO_USER_PROPERTY.getCPtr(property), property));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetLength(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int[] length) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetLength(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), length));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetMinMaxDistance(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, float[] min, float[] max) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetMinMaxDistance(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), min, max));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetSoundSize(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, float[] size) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetSoundSize(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), size));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_IsSnapshot(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int[] snapshot) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_IsSnapshot(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), snapshot));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_IsOneshot(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int[] oneshot) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_IsOneshot(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), oneshot));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_IsStream(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int[] isStream) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_IsStream(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), isStream));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_Is3D(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int[] is3D) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_Is3D(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), is3D));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_IsDopplerEnabled(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int[] doppler) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_IsDopplerEnabled(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), doppler));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_HasSustainPoint(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int[] sustainPoint) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_HasSustainPoint(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), sustainPoint));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_CreateInstance(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE instance) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_CreateInstance(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(instance)));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetInstanceCount(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetInstanceCount(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), count));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetInstanceList(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE array, int capacity, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetInstanceList(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(array), capacity, count));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_LoadSampleData(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_LoadSampleData(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription)));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_UnloadSampleData(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_UnloadSampleData(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription)));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetSampleLoadingState(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, SWIGTYPE_p_FMOD_STUDIO_LOADING_STATE state) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetSampleLoadingState(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), SWIGTYPE_p_FMOD_STUDIO_LOADING_STATE.getCPtr(state)));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_ReleaseAllInstances(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_ReleaseAllInstances(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription)));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_SetCallback(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, SWIGTYPE_p_f_unsigned_int_p_struct_FMOD_STUDIO_EVENTINSTANCE_p_void__FMOD_RESULT callback, long callbackmask) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_SetCallback(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), SWIGTYPE_p_f_unsigned_int_p_struct_FMOD_STUDIO_EVENTINSTANCE_p_void__FMOD_RESULT.getCPtr(callback), callbackmask));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_GetUserData(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_GetUserData(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Studio_EventDescription_SetUserData(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION eventdescription, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventDescription_SetUserData(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(eventdescription), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static int FMOD_Studio_EventInstance_IsValid(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance) {
    return FMODJNI.FMOD_Studio_EventInstance_IsValid(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetDescription(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION description) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetDescription(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(description)));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetVolume(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, float[] volume, float[] finalvolume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetVolume(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), volume, finalvolume));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetVolume(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetVolume(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), volume));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetPitch(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, float[] pitch, float[] finalpitch) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetPitch(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), pitch, finalpitch));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetPitch(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, float pitch) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetPitch(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), pitch));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_Get3DAttributes(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, FMOD_3D_ATTRIBUTES attributes) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_Get3DAttributes(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), FMOD_3D_ATTRIBUTES.getCPtr(attributes), attributes));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_Set3DAttributes(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, FMOD_3D_ATTRIBUTES attributes) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_Set3DAttributes(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), FMOD_3D_ATTRIBUTES.getCPtr(attributes), attributes));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetListenerMask(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, long[] mask) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetListenerMask(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), mask));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetListenerMask(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, long mask) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetListenerMask(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), mask));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetProperty(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, FMOD_STUDIO_EVENT_PROPERTY index, float[] value) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetProperty(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), index.swigValue(), value));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetProperty(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, FMOD_STUDIO_EVENT_PROPERTY index, float value) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetProperty(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), index.swigValue(), value));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetReverbLevel(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, int index, float[] level) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetReverbLevel(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), index, level));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetReverbLevel(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, int index, float level) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetReverbLevel(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), index, level));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetPaused(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, int[] paused) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetPaused(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), paused));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetPaused(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, int paused) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetPaused(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), paused));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_Start(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_Start(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance)));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_Stop(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, FMOD_STUDIO_STOP_MODE mode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_Stop(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), mode.swigValue()));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetTimelinePosition(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, int[] position) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetTimelinePosition(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), position));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetTimelinePosition(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, int position) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetTimelinePosition(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), position));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetPlaybackState(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, int[] state) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetPlaybackState(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), state));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetChannelGroup(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, SWIGTYPE_p_p_FMOD_CHANNELGROUP group) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetChannelGroup(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), SWIGTYPE_p_p_FMOD_CHANNELGROUP.getCPtr(group)));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetMinMaxDistance(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, float[] min, float[] max) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetMinMaxDistance(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), min, max));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_Release(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_Release(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance)));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_IsVirtual(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, int[] virtualstate) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_IsVirtual(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), virtualstate));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetParameterByName(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, String name, float[] value, float[] finalvalue) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetParameterByName(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), name, value, finalvalue));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetParameterByName(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, String name, float value, int ignoreseekspeed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetParameterByName(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), name, value, ignoreseekspeed));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetParameterByNameWithLabel(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, String name, String label, int ignoreseekspeed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetParameterByNameWithLabel(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), name, label, ignoreseekspeed));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetParameterByID(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, FMOD_STUDIO_PARAMETER_ID id, float[] value, float[] finalvalue) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetParameterByID(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), FMOD_STUDIO_PARAMETER_ID.getCPtr(id), id, value, finalvalue));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetParameterByID(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, FMOD_STUDIO_PARAMETER_ID id, float value, int ignoreseekspeed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetParameterByID(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), FMOD_STUDIO_PARAMETER_ID.getCPtr(id), id, value, ignoreseekspeed));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetParameterByIDWithLabel(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, FMOD_STUDIO_PARAMETER_ID id, String label, int ignoreseekspeed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetParameterByIDWithLabel(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), FMOD_STUDIO_PARAMETER_ID.getCPtr(id), id, label, ignoreseekspeed));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetParametersByIDs(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, FMOD_STUDIO_PARAMETER_ID ids, float[] values, int count, int ignoreseekspeed) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetParametersByIDs(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), FMOD_STUDIO_PARAMETER_ID.getCPtr(ids), ids, values, count, ignoreseekspeed));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_KeyOff(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_KeyOff(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance)));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetCallback(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, SWIGTYPE_p_f_unsigned_int_p_struct_FMOD_STUDIO_EVENTINSTANCE_p_void__FMOD_RESULT callback, long callbackmask) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetCallback(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), SWIGTYPE_p_f_unsigned_int_p_struct_FMOD_STUDIO_EVENTINSTANCE_p_void__FMOD_RESULT.getCPtr(callback), callbackmask));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetUserData(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetUserData(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_SetUserData(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_SetUserData(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetCPUUsage(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, long[] exclusive, long[] inclusive) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetCPUUsage(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), exclusive, inclusive));
  }

  public static FMOD_RESULT FMOD_Studio_EventInstance_GetMemoryUsage(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE eventinstance, FMOD_STUDIO_MEMORY_USAGE memoryusage) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_EventInstance_GetMemoryUsage(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(eventinstance), FMOD_STUDIO_MEMORY_USAGE.getCPtr(memoryusage), memoryusage));
  }

  public static int FMOD_Studio_Bus_IsValid(SWIGTYPE_p_FMOD_STUDIO_BUS bus) {
    return FMODJNI.FMOD_Studio_Bus_IsValid(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_GetID(SWIGTYPE_p_FMOD_STUDIO_BUS bus, FMOD_GUID id) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_GetID(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), FMOD_GUID.getCPtr(id), id));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_GetPath(SWIGTYPE_p_FMOD_STUDIO_BUS bus, byte[] path, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_GetPath(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), path, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_GetVolume(SWIGTYPE_p_FMOD_STUDIO_BUS bus, float[] volume, float[] finalvolume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_GetVolume(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), volume, finalvolume));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_SetVolume(SWIGTYPE_p_FMOD_STUDIO_BUS bus, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_SetVolume(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), volume));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_GetPaused(SWIGTYPE_p_FMOD_STUDIO_BUS bus, int[] paused) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_GetPaused(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), paused));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_SetPaused(SWIGTYPE_p_FMOD_STUDIO_BUS bus, int paused) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_SetPaused(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), paused));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_GetMute(SWIGTYPE_p_FMOD_STUDIO_BUS bus, int[] mute) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_GetMute(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), mute));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_SetMute(SWIGTYPE_p_FMOD_STUDIO_BUS bus, int mute) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_SetMute(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), mute));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_StopAllEvents(SWIGTYPE_p_FMOD_STUDIO_BUS bus, FMOD_STUDIO_STOP_MODE mode) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_StopAllEvents(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), mode.swigValue()));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_GetPortIndex(SWIGTYPE_p_FMOD_STUDIO_BUS bus, SWIGTYPE_p_unsigned_long_long index) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_GetPortIndex(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), SWIGTYPE_p_unsigned_long_long.getCPtr(index)));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_SetPortIndex(SWIGTYPE_p_FMOD_STUDIO_BUS bus, java.math.BigInteger index) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_SetPortIndex(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), index));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_LockChannelGroup(SWIGTYPE_p_FMOD_STUDIO_BUS bus) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_LockChannelGroup(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus)));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_UnlockChannelGroup(SWIGTYPE_p_FMOD_STUDIO_BUS bus) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_UnlockChannelGroup(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus)));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_GetChannelGroup(SWIGTYPE_p_FMOD_STUDIO_BUS bus, SWIGTYPE_p_p_FMOD_CHANNELGROUP group) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_GetChannelGroup(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), SWIGTYPE_p_p_FMOD_CHANNELGROUP.getCPtr(group)));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_GetCPUUsage(SWIGTYPE_p_FMOD_STUDIO_BUS bus, long[] exclusive, long[] inclusive) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_GetCPUUsage(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), exclusive, inclusive));
  }

  public static FMOD_RESULT FMOD_Studio_Bus_GetMemoryUsage(SWIGTYPE_p_FMOD_STUDIO_BUS bus, FMOD_STUDIO_MEMORY_USAGE memoryusage) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bus_GetMemoryUsage(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(bus), FMOD_STUDIO_MEMORY_USAGE.getCPtr(memoryusage), memoryusage));
  }

  public static int FMOD_Studio_VCA_IsValid(SWIGTYPE_p_FMOD_STUDIO_VCA vca) {
    return FMODJNI.FMOD_Studio_VCA_IsValid(SWIGTYPE_p_FMOD_STUDIO_VCA.getCPtr(vca));
  }

  public static FMOD_RESULT FMOD_Studio_VCA_GetID(SWIGTYPE_p_FMOD_STUDIO_VCA vca, FMOD_GUID id) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_VCA_GetID(SWIGTYPE_p_FMOD_STUDIO_VCA.getCPtr(vca), FMOD_GUID.getCPtr(id), id));
  }

  public static FMOD_RESULT FMOD_Studio_VCA_GetPath(SWIGTYPE_p_FMOD_STUDIO_VCA vca, byte[] path, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_VCA_GetPath(SWIGTYPE_p_FMOD_STUDIO_VCA.getCPtr(vca), path, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_VCA_GetVolume(SWIGTYPE_p_FMOD_STUDIO_VCA vca, float[] volume, float[] finalvolume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_VCA_GetVolume(SWIGTYPE_p_FMOD_STUDIO_VCA.getCPtr(vca), volume, finalvolume));
  }

  public static FMOD_RESULT FMOD_Studio_VCA_SetVolume(SWIGTYPE_p_FMOD_STUDIO_VCA vca, float volume) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_VCA_SetVolume(SWIGTYPE_p_FMOD_STUDIO_VCA.getCPtr(vca), volume));
  }

  public static int FMOD_Studio_Bank_IsValid(SWIGTYPE_p_FMOD_STUDIO_BANK bank) {
    return FMODJNI.FMOD_Studio_Bank_IsValid(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetID(SWIGTYPE_p_FMOD_STUDIO_BANK bank, FMOD_GUID id) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetID(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), FMOD_GUID.getCPtr(id), id));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetPath(SWIGTYPE_p_FMOD_STUDIO_BANK bank, byte[] path, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetPath(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), path, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_Unload(SWIGTYPE_p_FMOD_STUDIO_BANK bank) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_Unload(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank)));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_LoadSampleData(SWIGTYPE_p_FMOD_STUDIO_BANK bank) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_LoadSampleData(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank)));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_UnloadSampleData(SWIGTYPE_p_FMOD_STUDIO_BANK bank) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_UnloadSampleData(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank)));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetLoadingState(SWIGTYPE_p_FMOD_STUDIO_BANK bank, SWIGTYPE_p_FMOD_STUDIO_LOADING_STATE state) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetLoadingState(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), SWIGTYPE_p_FMOD_STUDIO_LOADING_STATE.getCPtr(state)));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetSampleLoadingState(SWIGTYPE_p_FMOD_STUDIO_BANK bank, SWIGTYPE_p_FMOD_STUDIO_LOADING_STATE state) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetSampleLoadingState(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), SWIGTYPE_p_FMOD_STUDIO_LOADING_STATE.getCPtr(state)));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetStringCount(SWIGTYPE_p_FMOD_STUDIO_BANK bank, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetStringCount(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), count));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetStringInfo(SWIGTYPE_p_FMOD_STUDIO_BANK bank, int index, FMOD_GUID id, byte[] path, int size, int[] retrieved) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetStringInfo(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), index, FMOD_GUID.getCPtr(id), id, path, size, retrieved));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetEventCount(SWIGTYPE_p_FMOD_STUDIO_BANK bank, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetEventCount(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), count));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetEventList(SWIGTYPE_p_FMOD_STUDIO_BANK bank, SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION array, int capacity, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetEventList(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(array), capacity, count));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetBusCount(SWIGTYPE_p_FMOD_STUDIO_BANK bank, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetBusCount(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), count));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetBusList(SWIGTYPE_p_FMOD_STUDIO_BANK bank, SWIGTYPE_p_p_FMOD_STUDIO_BUS array, int capacity, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetBusList(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), SWIGTYPE_p_p_FMOD_STUDIO_BUS.getCPtr(array), capacity, count));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetVCACount(SWIGTYPE_p_FMOD_STUDIO_BANK bank, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetVCACount(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), count));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetVCAList(SWIGTYPE_p_FMOD_STUDIO_BANK bank, SWIGTYPE_p_p_FMOD_STUDIO_VCA array, int capacity, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetVCAList(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), SWIGTYPE_p_p_FMOD_STUDIO_VCA.getCPtr(array), capacity, count));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_GetUserData(SWIGTYPE_p_FMOD_STUDIO_BANK bank, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_GetUserData(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Studio_Bank_SetUserData(SWIGTYPE_p_FMOD_STUDIO_BANK bank, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_Bank_SetUserData(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(bank), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static int FMOD_Studio_CommandReplay_IsValid(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay) {
    return FMODJNI.FMOD_Studio_CommandReplay_IsValid(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_GetSystem(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM system) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_GetSystem(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM.getCPtr(system)));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_GetLength(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, float[] length) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_GetLength(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), length));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_GetCommandCount(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, int[] count) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_GetCommandCount(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), count));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_GetCommandInfo(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, int commandindex, FMOD_STUDIO_COMMAND_INFO info) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_GetCommandInfo(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), commandindex, FMOD_STUDIO_COMMAND_INFO.getCPtr(info), info));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_GetCommandString(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, int commandindex, String buffer, int length) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_GetCommandString(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), commandindex, buffer, length));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_GetCommandAtTime(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, float time, int[] commandindex) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_GetCommandAtTime(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), time, commandindex));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_SetBankPath(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, String bankPath) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_SetBankPath(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), bankPath));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_Start(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_Start(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay)));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_Stop(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_Stop(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay)));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_SeekToTime(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, float time) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_SeekToTime(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), time));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_SeekToCommand(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, int commandindex) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_SeekToCommand(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), commandindex));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_GetPaused(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, int[] paused) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_GetPaused(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), paused));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_SetPaused(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, int paused) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_SetPaused(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), paused));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_GetPlaybackState(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, int[] state) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_GetPlaybackState(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), state));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_GetCurrentCommand(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, int[] commandindex, float[] currenttime) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_GetCurrentCommand(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), commandindex, currenttime));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_Release(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_Release(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay)));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_SetFrameCallback(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, SWIGTYPE_p_f_p_struct_FMOD_STUDIO_COMMANDREPLAY_int_float_p_void__FMOD_RESULT callback) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_SetFrameCallback(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), SWIGTYPE_p_f_p_struct_FMOD_STUDIO_COMMANDREPLAY_int_float_p_void__FMOD_RESULT.getCPtr(callback)));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_SetLoadBankCallback(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, SWIGTYPE_p_f_p_struct_FMOD_STUDIO_COMMANDREPLAY_int_p_q_const__struct_FMOD_GUID_p_q_const__char_unsigned_int_p_p_struct_FMOD_STUDIO_BANK_p_void__FMOD_RESULT callback) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_SetLoadBankCallback(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), SWIGTYPE_p_f_p_struct_FMOD_STUDIO_COMMANDREPLAY_int_p_q_const__struct_FMOD_GUID_p_q_const__char_unsigned_int_p_p_struct_FMOD_STUDIO_BANK_p_void__FMOD_RESULT.getCPtr(callback)));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_SetCreateInstanceCallback(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, SWIGTYPE_p_f_p_struct_FMOD_STUDIO_COMMANDREPLAY_int_p_struct_FMOD_STUDIO_EVENTDESCRIPTION_p_p_struct_FMOD_STUDIO_EVENTINSTANCE_p_void__FMOD_RESULT callback) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_SetCreateInstanceCallback(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), SWIGTYPE_p_f_p_struct_FMOD_STUDIO_COMMANDREPLAY_int_p_struct_FMOD_STUDIO_EVENTDESCRIPTION_p_p_struct_FMOD_STUDIO_EVENTINSTANCE_p_void__FMOD_RESULT.getCPtr(callback)));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_GetUserData(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_GetUserData(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static FMOD_RESULT FMOD_Studio_CommandReplay_SetUserData(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY replay, SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(FMODJNI.FMOD_Studio_CommandReplay_SetUserData(SWIGTYPE_p_FMOD_STUDIO_COMMANDREPLAY.getCPtr(replay), SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM new_FMOD_STUDIO_SYSTEM_p_p() {
    long cPtr = FMODJNI.new_FMOD_STUDIO_SYSTEM_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM copy_FMOD_STUDIO_SYSTEM_p_p(SWIGTYPE_p_FMOD_STUDIO_SYSTEM value) {
    long cPtr = FMODJNI.copy_FMOD_STUDIO_SYSTEM_p_p(SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM(cPtr, false);
  }

  public static void delete_FMOD_STUDIO_SYSTEM_p_p(SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM obj) {
    FMODJNI.delete_FMOD_STUDIO_SYSTEM_p_p(SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM.getCPtr(obj));
  }

  public static void FMOD_STUDIO_SYSTEM_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM obj, SWIGTYPE_p_FMOD_STUDIO_SYSTEM value) {
    FMODJNI.FMOD_STUDIO_SYSTEM_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM.getCPtr(obj), SWIGTYPE_p_FMOD_STUDIO_SYSTEM.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_STUDIO_SYSTEM FMOD_STUDIO_SYSTEM_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM obj) {
    long cPtr = FMODJNI.FMOD_STUDIO_SYSTEM_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_SYSTEM.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_STUDIO_SYSTEM(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_SYSTEM new_FMOD_SYSTEM_p_p() {
    long cPtr = FMODJNI.new_FMOD_SYSTEM_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_SYSTEM(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_SYSTEM copy_FMOD_SYSTEM_p_p(SWIGTYPE_p_FMOD_SYSTEM value) {
    long cPtr = FMODJNI.copy_FMOD_SYSTEM_p_p(SWIGTYPE_p_FMOD_SYSTEM.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_SYSTEM(cPtr, false);
  }

  public static void delete_FMOD_SYSTEM_p_p(SWIGTYPE_p_p_FMOD_SYSTEM obj) {
    FMODJNI.delete_FMOD_SYSTEM_p_p(SWIGTYPE_p_p_FMOD_SYSTEM.getCPtr(obj));
  }

  public static void FMOD_SYSTEM_p_p_assign(SWIGTYPE_p_p_FMOD_SYSTEM obj, SWIGTYPE_p_FMOD_SYSTEM value) {
    FMODJNI.FMOD_SYSTEM_p_p_assign(SWIGTYPE_p_p_FMOD_SYSTEM.getCPtr(obj), SWIGTYPE_p_FMOD_SYSTEM.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_SYSTEM FMOD_SYSTEM_p_p_value(SWIGTYPE_p_p_FMOD_SYSTEM obj) {
    long cPtr = FMODJNI.FMOD_SYSTEM_p_p_value(SWIGTYPE_p_p_FMOD_SYSTEM.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_SYSTEM(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION new_FMOD_STUDIO_EVENTDESCRIPTION_p_p() {
    long cPtr = FMODJNI.new_FMOD_STUDIO_EVENTDESCRIPTION_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION copy_FMOD_STUDIO_EVENTDESCRIPTION_p_p(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION value) {
    long cPtr = FMODJNI.copy_FMOD_STUDIO_EVENTDESCRIPTION_p_p(SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION(cPtr, false);
  }

  public static void delete_FMOD_STUDIO_EVENTDESCRIPTION_p_p(SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION obj) {
    FMODJNI.delete_FMOD_STUDIO_EVENTDESCRIPTION_p_p(SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(obj));
  }

  public static void FMOD_STUDIO_EVENTDESCRIPTION_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION obj, SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION value) {
    FMODJNI.FMOD_STUDIO_EVENTDESCRIPTION_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(obj), SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION FMOD_STUDIO_EVENTDESCRIPTION_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION obj) {
    long cPtr = FMODJNI.FMOD_STUDIO_EVENTDESCRIPTION_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_EVENTDESCRIPTION.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_STUDIO_EVENTDESCRIPTION(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_BUS new_FMOD_STUDIO_BUS_p_p() {
    long cPtr = FMODJNI.new_FMOD_STUDIO_BUS_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_BUS(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_BUS copy_FMOD_STUDIO_BUS_p_p(SWIGTYPE_p_FMOD_STUDIO_BUS value) {
    long cPtr = FMODJNI.copy_FMOD_STUDIO_BUS_p_p(SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_BUS(cPtr, false);
  }

  public static void delete_FMOD_STUDIO_BUS_p_p(SWIGTYPE_p_p_FMOD_STUDIO_BUS obj) {
    FMODJNI.delete_FMOD_STUDIO_BUS_p_p(SWIGTYPE_p_p_FMOD_STUDIO_BUS.getCPtr(obj));
  }

  public static void FMOD_STUDIO_BUS_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_BUS obj, SWIGTYPE_p_FMOD_STUDIO_BUS value) {
    FMODJNI.FMOD_STUDIO_BUS_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_BUS.getCPtr(obj), SWIGTYPE_p_FMOD_STUDIO_BUS.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_STUDIO_BUS FMOD_STUDIO_BUS_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_BUS obj) {
    long cPtr = FMODJNI.FMOD_STUDIO_BUS_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_BUS.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_STUDIO_BUS(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_VCA new_FMOD_STUDIO_VCA_p_p() {
    long cPtr = FMODJNI.new_FMOD_STUDIO_VCA_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_VCA(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_VCA copy_FMOD_STUDIO_VCA_p_p(SWIGTYPE_p_FMOD_STUDIO_VCA value) {
    long cPtr = FMODJNI.copy_FMOD_STUDIO_VCA_p_p(SWIGTYPE_p_FMOD_STUDIO_VCA.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_VCA(cPtr, false);
  }

  public static void delete_FMOD_STUDIO_VCA_p_p(SWIGTYPE_p_p_FMOD_STUDIO_VCA obj) {
    FMODJNI.delete_FMOD_STUDIO_VCA_p_p(SWIGTYPE_p_p_FMOD_STUDIO_VCA.getCPtr(obj));
  }

  public static void FMOD_STUDIO_VCA_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_VCA obj, SWIGTYPE_p_FMOD_STUDIO_VCA value) {
    FMODJNI.FMOD_STUDIO_VCA_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_VCA.getCPtr(obj), SWIGTYPE_p_FMOD_STUDIO_VCA.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_STUDIO_VCA FMOD_STUDIO_VCA_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_VCA obj) {
    long cPtr = FMODJNI.FMOD_STUDIO_VCA_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_VCA.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_STUDIO_VCA(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_BANK new_FMOD_STUDIO_BANK_p_p() {
    long cPtr = FMODJNI.new_FMOD_STUDIO_BANK_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_BANK(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_BANK copy_FMOD_STUDIO_BANK_p_p(SWIGTYPE_p_FMOD_STUDIO_BANK value) {
    long cPtr = FMODJNI.copy_FMOD_STUDIO_BANK_p_p(SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_BANK(cPtr, false);
  }

  public static void delete_FMOD_STUDIO_BANK_p_p(SWIGTYPE_p_p_FMOD_STUDIO_BANK obj) {
    FMODJNI.delete_FMOD_STUDIO_BANK_p_p(SWIGTYPE_p_p_FMOD_STUDIO_BANK.getCPtr(obj));
  }

  public static void FMOD_STUDIO_BANK_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_BANK obj, SWIGTYPE_p_FMOD_STUDIO_BANK value) {
    FMODJNI.FMOD_STUDIO_BANK_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_BANK.getCPtr(obj), SWIGTYPE_p_FMOD_STUDIO_BANK.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_STUDIO_BANK FMOD_STUDIO_BANK_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_BANK obj) {
    long cPtr = FMODJNI.FMOD_STUDIO_BANK_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_BANK.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_STUDIO_BANK(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE new_FMOD_STUDIO_EVENTINSTANCE_p_p() {
    long cPtr = FMODJNI.new_FMOD_STUDIO_EVENTINSTANCE_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE copy_FMOD_STUDIO_EVENTINSTANCE_p_p(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE value) {
    long cPtr = FMODJNI.copy_FMOD_STUDIO_EVENTINSTANCE_p_p(SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE(cPtr, false);
  }

  public static void delete_FMOD_STUDIO_EVENTINSTANCE_p_p(SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE obj) {
    FMODJNI.delete_FMOD_STUDIO_EVENTINSTANCE_p_p(SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(obj));
  }

  public static void FMOD_STUDIO_EVENTINSTANCE_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE obj, SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE value) {
    FMODJNI.FMOD_STUDIO_EVENTINSTANCE_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(obj), SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE FMOD_STUDIO_EVENTINSTANCE_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE obj) {
    long cPtr = FMODJNI.FMOD_STUDIO_EVENTINSTANCE_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_EVENTINSTANCE.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_STUDIO_EVENTINSTANCE(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_CHANNELGROUP new_FMOD_CHANNELGROUP_p_p() {
    long cPtr = FMODJNI.new_FMOD_CHANNELGROUP_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_CHANNELGROUP(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_CHANNELGROUP copy_FMOD_CHANNELGROUP_p_p(SWIGTYPE_p_FMOD_CHANNELGROUP value) {
    long cPtr = FMODJNI.copy_FMOD_CHANNELGROUP_p_p(SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_CHANNELGROUP(cPtr, false);
  }

  public static void delete_FMOD_CHANNELGROUP_p_p(SWIGTYPE_p_p_FMOD_CHANNELGROUP obj) {
    FMODJNI.delete_FMOD_CHANNELGROUP_p_p(SWIGTYPE_p_p_FMOD_CHANNELGROUP.getCPtr(obj));
  }

  public static void FMOD_CHANNELGROUP_p_p_assign(SWIGTYPE_p_p_FMOD_CHANNELGROUP obj, SWIGTYPE_p_FMOD_CHANNELGROUP value) {
    FMODJNI.FMOD_CHANNELGROUP_p_p_assign(SWIGTYPE_p_p_FMOD_CHANNELGROUP.getCPtr(obj), SWIGTYPE_p_FMOD_CHANNELGROUP.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_CHANNELGROUP FMOD_CHANNELGROUP_p_p_value(SWIGTYPE_p_p_FMOD_CHANNELGROUP obj) {
    long cPtr = FMODJNI.FMOD_CHANNELGROUP_p_p_value(SWIGTYPE_p_p_FMOD_CHANNELGROUP.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_CHANNELGROUP(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_PARAMETER_ID new_FMOD_STUDIO_PARAMETER_ID_p_p() {
    long cPtr = FMODJNI.new_FMOD_STUDIO_PARAMETER_ID_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_PARAMETER_ID(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_STUDIO_PARAMETER_ID copy_FMOD_STUDIO_PARAMETER_ID_p_p(FMOD_STUDIO_PARAMETER_ID value) {
    long cPtr = FMODJNI.copy_FMOD_STUDIO_PARAMETER_ID_p_p(FMOD_STUDIO_PARAMETER_ID.getCPtr(value), value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_STUDIO_PARAMETER_ID(cPtr, false);
  }

  public static void delete_FMOD_STUDIO_PARAMETER_ID_p_p(SWIGTYPE_p_p_FMOD_STUDIO_PARAMETER_ID obj) {
    FMODJNI.delete_FMOD_STUDIO_PARAMETER_ID_p_p(SWIGTYPE_p_p_FMOD_STUDIO_PARAMETER_ID.getCPtr(obj));
  }

  public static void FMOD_STUDIO_PARAMETER_ID_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_PARAMETER_ID obj, FMOD_STUDIO_PARAMETER_ID value) {
    FMODJNI.FMOD_STUDIO_PARAMETER_ID_p_p_assign(SWIGTYPE_p_p_FMOD_STUDIO_PARAMETER_ID.getCPtr(obj), FMOD_STUDIO_PARAMETER_ID.getCPtr(value), value);
  }

  public static FMOD_STUDIO_PARAMETER_ID FMOD_STUDIO_PARAMETER_ID_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_PARAMETER_ID obj) {
    long cPtr = FMODJNI.FMOD_STUDIO_PARAMETER_ID_p_p_value(SWIGTYPE_p_p_FMOD_STUDIO_PARAMETER_ID.getCPtr(obj));
    return (cPtr == 0) ? null : new FMOD_STUDIO_PARAMETER_ID(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_DSP new_FMOD_DSP_p_p() {
    long cPtr = FMODJNI.new_FMOD_DSP_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_DSP(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_DSP copy_FMOD_DSP_p_p(SWIGTYPE_p_FMOD_DSP value) {
    long cPtr = FMODJNI.copy_FMOD_DSP_p_p(SWIGTYPE_p_FMOD_DSP.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_DSP(cPtr, false);
  }

  public static void delete_FMOD_DSP_p_p(SWIGTYPE_p_p_FMOD_DSP obj) {
    FMODJNI.delete_FMOD_DSP_p_p(SWIGTYPE_p_p_FMOD_DSP.getCPtr(obj));
  }

  public static void FMOD_DSP_p_p_assign(SWIGTYPE_p_p_FMOD_DSP obj, SWIGTYPE_p_FMOD_DSP value) {
    FMODJNI.FMOD_DSP_p_p_assign(SWIGTYPE_p_p_FMOD_DSP.getCPtr(obj), SWIGTYPE_p_FMOD_DSP.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_DSP FMOD_DSP_p_p_value(SWIGTYPE_p_p_FMOD_DSP obj) {
    long cPtr = FMODJNI.FMOD_DSP_p_p_value(SWIGTYPE_p_p_FMOD_DSP.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_DSP(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION new_FMOD_DSP_DESCRIPTION_p_p() {
    long cPtr = FMODJNI.new_FMOD_DSP_DESCRIPTION_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION copy_FMOD_DSP_DESCRIPTION_p_p(SWIGTYPE_p_FMOD_DSP_DESCRIPTION value) {
    long cPtr = FMODJNI.copy_FMOD_DSP_DESCRIPTION_p_p(SWIGTYPE_p_FMOD_DSP_DESCRIPTION.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION(cPtr, false);
  }

  public static void delete_FMOD_DSP_DESCRIPTION_p_p(SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION obj) {
    FMODJNI.delete_FMOD_DSP_DESCRIPTION_p_p(SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION.getCPtr(obj));
  }

  public static void FMOD_DSP_DESCRIPTION_p_p_assign(SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION obj, SWIGTYPE_p_FMOD_DSP_DESCRIPTION value) {
    FMODJNI.FMOD_DSP_DESCRIPTION_p_p_assign(SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION.getCPtr(obj), SWIGTYPE_p_FMOD_DSP_DESCRIPTION.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_DSP_DESCRIPTION FMOD_DSP_DESCRIPTION_p_p_value(SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION obj) {
    long cPtr = FMODJNI.FMOD_DSP_DESCRIPTION_p_p_value(SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_DSP_DESCRIPTION(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_SOUNDGROUP new_FMOD_SOUNDGROUP_p_p() {
    long cPtr = FMODJNI.new_FMOD_SOUNDGROUP_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_SOUNDGROUP(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_SOUNDGROUP copy_FMOD_SOUNDGROUP_p_p(SWIGTYPE_p_FMOD_SOUNDGROUP value) {
    long cPtr = FMODJNI.copy_FMOD_SOUNDGROUP_p_p(SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_SOUNDGROUP(cPtr, false);
  }

  public static void delete_FMOD_SOUNDGROUP_p_p(SWIGTYPE_p_p_FMOD_SOUNDGROUP obj) {
    FMODJNI.delete_FMOD_SOUNDGROUP_p_p(SWIGTYPE_p_p_FMOD_SOUNDGROUP.getCPtr(obj));
  }

  public static void FMOD_SOUNDGROUP_p_p_assign(SWIGTYPE_p_p_FMOD_SOUNDGROUP obj, SWIGTYPE_p_FMOD_SOUNDGROUP value) {
    FMODJNI.FMOD_SOUNDGROUP_p_p_assign(SWIGTYPE_p_p_FMOD_SOUNDGROUP.getCPtr(obj), SWIGTYPE_p_FMOD_SOUNDGROUP.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_SOUNDGROUP FMOD_SOUNDGROUP_p_p_value(SWIGTYPE_p_p_FMOD_SOUNDGROUP obj) {
    long cPtr = FMODJNI.FMOD_SOUNDGROUP_p_p_value(SWIGTYPE_p_p_FMOD_SOUNDGROUP.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_SOUNDGROUP(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_REVERB3D new_FMOD_REVERB3D_p_p() {
    long cPtr = FMODJNI.new_FMOD_REVERB3D_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_REVERB3D(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_REVERB3D copy_FMOD_REVERB3D_p_p(SWIGTYPE_p_FMOD_REVERB3D value) {
    long cPtr = FMODJNI.copy_FMOD_REVERB3D_p_p(SWIGTYPE_p_FMOD_REVERB3D.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_REVERB3D(cPtr, false);
  }

  public static void delete_FMOD_REVERB3D_p_p(SWIGTYPE_p_p_FMOD_REVERB3D obj) {
    FMODJNI.delete_FMOD_REVERB3D_p_p(SWIGTYPE_p_p_FMOD_REVERB3D.getCPtr(obj));
  }

  public static void FMOD_REVERB3D_p_p_assign(SWIGTYPE_p_p_FMOD_REVERB3D obj, SWIGTYPE_p_FMOD_REVERB3D value) {
    FMODJNI.FMOD_REVERB3D_p_p_assign(SWIGTYPE_p_p_FMOD_REVERB3D.getCPtr(obj), SWIGTYPE_p_FMOD_REVERB3D.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_REVERB3D FMOD_REVERB3D_p_p_value(SWIGTYPE_p_p_FMOD_REVERB3D obj) {
    long cPtr = FMODJNI.FMOD_REVERB3D_p_p_value(SWIGTYPE_p_p_FMOD_REVERB3D.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_REVERB3D(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_CHANNEL new_FMOD_CHANNEL_p_p() {
    long cPtr = FMODJNI.new_FMOD_CHANNEL_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_CHANNEL(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_CHANNEL copy_FMOD_CHANNEL_p_p(SWIGTYPE_p_FMOD_CHANNEL value) {
    long cPtr = FMODJNI.copy_FMOD_CHANNEL_p_p(SWIGTYPE_p_FMOD_CHANNEL.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_CHANNEL(cPtr, false);
  }

  public static void delete_FMOD_CHANNEL_p_p(SWIGTYPE_p_p_FMOD_CHANNEL obj) {
    FMODJNI.delete_FMOD_CHANNEL_p_p(SWIGTYPE_p_p_FMOD_CHANNEL.getCPtr(obj));
  }

  public static void FMOD_CHANNEL_p_p_assign(SWIGTYPE_p_p_FMOD_CHANNEL obj, SWIGTYPE_p_FMOD_CHANNEL value) {
    FMODJNI.FMOD_CHANNEL_p_p_assign(SWIGTYPE_p_p_FMOD_CHANNEL.getCPtr(obj), SWIGTYPE_p_FMOD_CHANNEL.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_CHANNEL FMOD_CHANNEL_p_p_value(SWIGTYPE_p_p_FMOD_CHANNEL obj) {
    long cPtr = FMODJNI.FMOD_CHANNEL_p_p_value(SWIGTYPE_p_p_FMOD_CHANNEL.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_CHANNEL(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_GEOMETRY new_FMOD_GEOMETRY_p_p() {
    long cPtr = FMODJNI.new_FMOD_GEOMETRY_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_GEOMETRY(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_GEOMETRY copy_FMOD_GEOMETRY_p_p(SWIGTYPE_p_FMOD_GEOMETRY value) {
    long cPtr = FMODJNI.copy_FMOD_GEOMETRY_p_p(SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_GEOMETRY(cPtr, false);
  }

  public static void delete_FMOD_GEOMETRY_p_p(SWIGTYPE_p_p_FMOD_GEOMETRY obj) {
    FMODJNI.delete_FMOD_GEOMETRY_p_p(SWIGTYPE_p_p_FMOD_GEOMETRY.getCPtr(obj));
  }

  public static void FMOD_GEOMETRY_p_p_assign(SWIGTYPE_p_p_FMOD_GEOMETRY obj, SWIGTYPE_p_FMOD_GEOMETRY value) {
    FMODJNI.FMOD_GEOMETRY_p_p_assign(SWIGTYPE_p_p_FMOD_GEOMETRY.getCPtr(obj), SWIGTYPE_p_FMOD_GEOMETRY.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_GEOMETRY FMOD_GEOMETRY_p_p_value(SWIGTYPE_p_p_FMOD_GEOMETRY obj) {
    long cPtr = FMODJNI.FMOD_GEOMETRY_p_p_value(SWIGTYPE_p_p_FMOD_GEOMETRY.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_GEOMETRY(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_VECTOR new_FMOD_VECTOR_p_p() {
    long cPtr = FMODJNI.new_FMOD_VECTOR_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_VECTOR(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_VECTOR copy_FMOD_VECTOR_p_p(FMOD_VECTOR value) {
    long cPtr = FMODJNI.copy_FMOD_VECTOR_p_p(FMOD_VECTOR.getCPtr(value), value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_VECTOR(cPtr, false);
  }

  public static void delete_FMOD_VECTOR_p_p(SWIGTYPE_p_p_FMOD_VECTOR obj) {
    FMODJNI.delete_FMOD_VECTOR_p_p(SWIGTYPE_p_p_FMOD_VECTOR.getCPtr(obj));
  }

  public static void FMOD_VECTOR_p_p_assign(SWIGTYPE_p_p_FMOD_VECTOR obj, FMOD_VECTOR value) {
    FMODJNI.FMOD_VECTOR_p_p_assign(SWIGTYPE_p_p_FMOD_VECTOR.getCPtr(obj), FMOD_VECTOR.getCPtr(value), value);
  }

  public static FMOD_VECTOR FMOD_VECTOR_p_p_value(SWIGTYPE_p_p_FMOD_VECTOR obj) {
    long cPtr = FMODJNI.FMOD_VECTOR_p_p_value(SWIGTYPE_p_p_FMOD_VECTOR.getCPtr(obj));
    return (cPtr == 0) ? null : new FMOD_VECTOR(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_SOUND new_FMOD_SOUND_p_p() {
    long cPtr = FMODJNI.new_FMOD_SOUND_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_SOUND(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_SOUND copy_FMOD_SOUND_p_p(SWIGTYPE_p_FMOD_SOUND value) {
    long cPtr = FMODJNI.copy_FMOD_SOUND_p_p(SWIGTYPE_p_FMOD_SOUND.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_SOUND(cPtr, false);
  }

  public static void delete_FMOD_SOUND_p_p(SWIGTYPE_p_p_FMOD_SOUND obj) {
    FMODJNI.delete_FMOD_SOUND_p_p(SWIGTYPE_p_p_FMOD_SOUND.getCPtr(obj));
  }

  public static void FMOD_SOUND_p_p_assign(SWIGTYPE_p_p_FMOD_SOUND obj, SWIGTYPE_p_FMOD_SOUND value) {
    FMODJNI.FMOD_SOUND_p_p_assign(SWIGTYPE_p_p_FMOD_SOUND.getCPtr(obj), SWIGTYPE_p_FMOD_SOUND.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_SOUND FMOD_SOUND_p_p_value(SWIGTYPE_p_p_FMOD_SOUND obj) {
    long cPtr = FMODJNI.FMOD_SOUND_p_p_value(SWIGTYPE_p_p_FMOD_SOUND.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_SOUND(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_SYNCPOINT new_FMOD_SYNCPOINT_p_p() {
    long cPtr = FMODJNI.new_FMOD_SYNCPOINT_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_SYNCPOINT(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_SYNCPOINT copy_FMOD_SYNCPOINT_p_p(SWIGTYPE_p_FMOD_SYNCPOINT value) {
    long cPtr = FMODJNI.copy_FMOD_SYNCPOINT_p_p(SWIGTYPE_p_FMOD_SYNCPOINT.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_SYNCPOINT(cPtr, false);
  }

  public static void delete_FMOD_SYNCPOINT_p_p(SWIGTYPE_p_p_FMOD_SYNCPOINT obj) {
    FMODJNI.delete_FMOD_SYNCPOINT_p_p(SWIGTYPE_p_p_FMOD_SYNCPOINT.getCPtr(obj));
  }

  public static void FMOD_SYNCPOINT_p_p_assign(SWIGTYPE_p_p_FMOD_SYNCPOINT obj, SWIGTYPE_p_FMOD_SYNCPOINT value) {
    FMODJNI.FMOD_SYNCPOINT_p_p_assign(SWIGTYPE_p_p_FMOD_SYNCPOINT.getCPtr(obj), SWIGTYPE_p_FMOD_SYNCPOINT.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_SYNCPOINT FMOD_SYNCPOINT_p_p_value(SWIGTYPE_p_p_FMOD_SYNCPOINT obj) {
    long cPtr = FMODJNI.FMOD_SYNCPOINT_p_p_value(SWIGTYPE_p_p_FMOD_SYNCPOINT.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_SYNCPOINT(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_DSPCONNECTION new_FMOD_DSPCONNECTION_p_p() {
    long cPtr = FMODJNI.new_FMOD_DSPCONNECTION_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_DSPCONNECTION(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_DSPCONNECTION copy_FMOD_DSPCONNECTION_p_p(SWIGTYPE_p_FMOD_DSPCONNECTION value) {
    long cPtr = FMODJNI.copy_FMOD_DSPCONNECTION_p_p(SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_DSPCONNECTION(cPtr, false);
  }

  public static void delete_FMOD_DSPCONNECTION_p_p(SWIGTYPE_p_p_FMOD_DSPCONNECTION obj) {
    FMODJNI.delete_FMOD_DSPCONNECTION_p_p(SWIGTYPE_p_p_FMOD_DSPCONNECTION.getCPtr(obj));
  }

  public static void FMOD_DSPCONNECTION_p_p_assign(SWIGTYPE_p_p_FMOD_DSPCONNECTION obj, SWIGTYPE_p_FMOD_DSPCONNECTION value) {
    FMODJNI.FMOD_DSPCONNECTION_p_p_assign(SWIGTYPE_p_p_FMOD_DSPCONNECTION.getCPtr(obj), SWIGTYPE_p_FMOD_DSPCONNECTION.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_DSPCONNECTION FMOD_DSPCONNECTION_p_p_value(SWIGTYPE_p_p_FMOD_DSPCONNECTION obj) {
    long cPtr = FMODJNI.FMOD_DSPCONNECTION_p_p_value(SWIGTYPE_p_p_FMOD_DSPCONNECTION.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_DSPCONNECTION(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC new_FMOD_DSP_PARAMETER_DESC_p_p() {
    long cPtr = FMODJNI.new_FMOD_DSP_PARAMETER_DESC_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC(cPtr, false);
  }

  public static SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC copy_FMOD_DSP_PARAMETER_DESC_p_p(SWIGTYPE_p_FMOD_DSP_PARAMETER_DESC value) {
    long cPtr = FMODJNI.copy_FMOD_DSP_PARAMETER_DESC_p_p(SWIGTYPE_p_FMOD_DSP_PARAMETER_DESC.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC(cPtr, false);
  }

  public static void delete_FMOD_DSP_PARAMETER_DESC_p_p(SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC obj) {
    FMODJNI.delete_FMOD_DSP_PARAMETER_DESC_p_p(SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC.getCPtr(obj));
  }

  public static void FMOD_DSP_PARAMETER_DESC_p_p_assign(SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC obj, SWIGTYPE_p_FMOD_DSP_PARAMETER_DESC value) {
    FMODJNI.FMOD_DSP_PARAMETER_DESC_p_p_assign(SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC.getCPtr(obj), SWIGTYPE_p_FMOD_DSP_PARAMETER_DESC.getCPtr(value));
  }

  public static SWIGTYPE_p_FMOD_DSP_PARAMETER_DESC FMOD_DSP_PARAMETER_DESC_p_p_value(SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC obj) {
    long cPtr = FMODJNI.FMOD_DSP_PARAMETER_DESC_p_p_value(SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_DSP_PARAMETER_DESC(cPtr, false);
  }

}
