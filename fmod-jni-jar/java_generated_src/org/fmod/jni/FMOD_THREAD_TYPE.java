/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.fmod.jni;

public enum FMOD_THREAD_TYPE {
  FMOD_THREAD_TYPE_MIXER,
  FMOD_THREAD_TYPE_FEEDER,
  FMOD_THREAD_TYPE_STREAM,
  FMOD_THREAD_TYPE_FILE,
  FMOD_THREAD_TYPE_NONBLOCKING,
  FMOD_THREAD_TYPE_RECORD,
  FMOD_THREAD_TYPE_GEOMETRY,
  FMOD_THREAD_TYPE_PROFILER,
  FMOD_THREAD_TYPE_STUDIO_UPDATE,
  FMOD_THREAD_TYPE_STUDIO_LOAD_BANK,
  FMOD_THREAD_TYPE_STUDIO_LOAD_SAMPLE,
  FMOD_THREAD_TYPE_CONVOLUTION1,
  FMOD_THREAD_TYPE_CONVOLUTION2,
  FMOD_THREAD_TYPE_MAX,
  FMOD_THREAD_TYPE_FORCEINT(FMODJNI.FMOD_THREAD_TYPE_FORCEINT_get());

  public final int swigValue() {
    return swigValue;
  }

  public static FMOD_THREAD_TYPE swigToEnum(int swigValue) {
    FMOD_THREAD_TYPE[] swigValues = FMOD_THREAD_TYPE.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (FMOD_THREAD_TYPE swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + FMOD_THREAD_TYPE.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private FMOD_THREAD_TYPE() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private FMOD_THREAD_TYPE(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private FMOD_THREAD_TYPE(FMOD_THREAD_TYPE swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

